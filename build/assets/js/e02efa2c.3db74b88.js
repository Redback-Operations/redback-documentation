"use strict";(self.webpackChunkredback_documentation=self.webpackChunkredback_documentation||[]).push([[2713],{5714:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"project-1/iot/codebase-documentation/Environment-Variables","title":"Environment-Variables","description":"Last updated by \'23/09/2024\'","source":"@site/docs/project-1/iot/codebase-documentation/Environment-Variables.md","sourceDirName":"project-1/iot/codebase-documentation","slug":"/project-1/iot/codebase-documentation/Environment-Variables","permalink":"/redback-documentation/docs/project-1/iot/codebase-documentation/Environment-Variables","draft":false,"unlisted":false,"editUrl":"https://github.com/Redback-Operations/redback-documentation/blob/main/docs/project-1/iot/codebase-documentation/Environment-Variables.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Codebase-Overview","permalink":"/redback-documentation/docs/project-1/iot/codebase-documentation/Codebase-Overview"},"next":{"title":"MQTT-Client","permalink":"/redback-documentation/docs/project-1/iot/codebase-documentation/MQTT-Client"}}');var s=r(74848),t=r(28453);const d={sidebar_position:2},o="Environment Variables",a={},c=[{value:"Variables",id:"variables",level:2},{value:"Adding, Removing, &amp; Editing Variables",id:"adding-removing--editing-variables",level:2},{value:"Loading using <code>bash</code> script",id:"loading-using-bash-script",level:2},{value:"Passing to <code>python</code> using <code>bash</code> script",id:"passing-to-python-using-bash-script",level:2},{value:"Loading without parsing in <code>python</code>",id:"loading-without-parsing-in-python",level:2},{value:"Further Information",id:"further-information",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Last updated by:"})," KasparByrne, ",(0,s.jsx)(n.strong,{children:"Last updated on:"})," '23/09/2024'"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Last updated by:"})," KasparByrne, ",(0,s.jsx)(n.strong,{children:"Last updated on:"})," '23/09/2024'"]}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"environment-variables",children:"Environment Variables"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"export MQTT_HOSTNAME=...\r\nexport MQTT_USERNAME=...\r\nexport MQTT_PASSWORD=...\r\nexport MQTT_PORT=...\r\nexport DEVICE_ID=...\r\nexport HEART_RATE_ADAPTER_NAME=...\r\nexport HEART_RATE_ALIAS_PREFIX=...\r\nexport CADENCE_ADAPTER_NAME=...\r\nexport CADENCE_ALIAS_PREFIX=...\r\nexport FAN_ADAPTER_NAME=...\r\nexport FAN_ALIAS_PREFIX=...\r\nexport KICKR_MAC_ADDRESS=...\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["A partial and redacted sample of the ",(0,s.jsx)(n.code,{children:".env"})," file"]})}),"\n",(0,s.jsxs)(n.p,{children:["To make sensitive information accessible but not displayed on the public repo, a ",(0,s.jsx)(n.code,{children:".env"})," file has been created in the home directory of the Raspberry Pi. This file's variables can be loaded by ",(0,s.jsx)(n.code,{children:"bash"})," scripts then either parsed by the loading ",(0,s.jsx)(n.code,{children:"bash"})," script to a ",(0,s.jsx)(n.code,{children:"python"})," or other program, or the program can access it directly from the environment variables."]}),"\n",(0,s.jsx)(n.h2,{id:"variables",children:"Variables"}),"\n",(0,s.jsx)(n.p,{children:"Some vairables of interest include:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Variable"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DEVICE_ID"})}),(0,s.jsx)(n.td,{children:"ID of the Smartbike - used in MQTT topics"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MQTT_HOSTNAME"})}),(0,s.jsx)(n.td,{children:"MQTT broker host address"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MQTT_PORT"})}),(0,s.jsx)(n.td,{children:"MQTT broker port"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MQTT_USERNAME"})}),(0,s.jsx)(n.td,{children:"Configured MQTT username"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MQTT_PASSWORD"})}),(0,s.jsx)(n.td,{children:"Configured MQTT password"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"KICKR_MAC_ADDRESS"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"KICKR smart trainer"})," MAC address used by driver to connect via BLE"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"HEART_RATE_ALIAS_PREFIX"})}),(0,s.jsxs)(n.td,{children:["BLE advertised name of the ",(0,s.jsx)(n.strong,{children:"TICKR heart rate monitor"})," - used by driver to connect via BLE"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CADENCE_ALIAS_PREFIX"})}),(0,s.jsxs)(n.td,{children:["BLE advertised name of the ",(0,s.jsx)(n.strong,{children:"Wahoo cadence sensor"})," - used by driver to connect via BLE"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FAN_ALIAS_PREFIX"})}),(0,s.jsxs)(n.td,{children:["BLE advertised name of the ",(0,s.jsx)(n.strong,{children:"Wahoo headwind fan"})," - used by driver to connect via BLE"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"HEART_RATE_ADAPTER_NAME"})}),(0,s.jsxs)(n.td,{children:["Adapter address of the Raspberry Pi's ",(0,s.jsx)(n.strong,{children:"BLE adapter"})," - used by drivers to connect via BLE - the same value for ",(0,s.jsx)(n.code,{children:"FAN_ADAPTER_NAME"})," & ",(0,s.jsx)(n.code,{children:"CADENCE_ADAPTER_NAME"})]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"adding-removing--editing-variables",children:"Adding, Removing, & Editing Variables"}),"\n",(0,s.jsxs)(n.p,{children:["To modify the ",(0,s.jsx)(n.code,{children:".env"})," file open the ",(0,s.jsx)(n.code,{children:".env"})," file in the home directory using ",(0,s.jsx)(n.code,{children:"nano"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"nano .env\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"loading-using-bash-script",children:["Loading using ",(0,s.jsx)(n.code,{children:"bash"})," script"]}),"\n",(0,s.jsxs)(n.p,{children:["To load the environment variables using a ",(0,s.jsx)(n.code,{children:"bash"})," script add the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# at top of script\r\nsource ~/.env\r\n\r\n...\r\n\r\n# print value\r\necho $DEVICE_ID\r\n\r\n# use as a string\r\necho "Smartbike ID: ${DEVICE_ID}"\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"passing-to-python-using-bash-script",children:["Passing to ",(0,s.jsx)(n.code,{children:"python"})," using ",(0,s.jsx)(n.code,{children:"bash"})," script"]}),"\n",(0,s.jsxs)(n.p,{children:["To parse the variable to a ",(0,s.jsx)(n.code,{children:"python"})," program, the ",(0,s.jsx)(n.code,{children:"python"})," program must include the ",(0,s.jsx)(n.code,{children:"python"})," ",(0,s.jsx)(n.code,{children:"shebang"})," at the top of the file and configure an ",(0,s.jsx)(n.code,{children:"ArgumentParser"})," using the ",(0,s.jsx)(n.code,{children:"argparse"})," module:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"#!/usr/bin/env python3\r\n\r\nimport os\r\nfrom argparse import ArgumentParser\r\n\r\n...\r\n\r\n# initialise parser\r\nparser = ArgumentParser()\r\nparser.add_argument('--device_id', dest='device_id', type=str, help=\"Smartbike unique id\", default=os.getenv('DEVICE_ID'))\r\n\r\n# load parsed arguments\r\nargs = parser.parse_args()\r\n\r\n...\r\n\r\n# use argument\r\nprint(f'Smartbike ID: {args.device_id}')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To parse the variables from the ",(0,s.jsx)(n.code,{children:"bash"})," script to the ",(0,s.jsx)(n.code,{children:"python"})," program - indicate the variable and values when instigating the ",(0,s.jsx)(n.code,{children:"python"})," program parsing the variables as ",(0,s.jsx)(n.code,{children:"string"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"source ~/.env\r\n\r\n...\r\n\r\npython3 ~/iot/Drivers/my-driver/driver.py --device_id ${DEVICE_ID}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Order of parsed named arguments does not matter."})}),"\n",(0,s.jsxs)(n.h2,{id:"loading-without-parsing-in-python",children:["Loading without parsing in ",(0,s.jsx)(n.code,{children:"python"})]}),"\n",(0,s.jsxs)(n.p,{children:["To load the variables without parsing explicitly from the ",(0,s.jsx)(n.code,{children:"bash"})," script. Load the variables normally in the ",(0,s.jsx)(n.code,{children:"bash"})," script and instigate the ",(0,s.jsx)(n.code,{children:"python"})," program:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"source ~/.env\r\n\r\n...\r\n\r\npython3 ~/iot/Drivers/my-driver/driver.py\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In the python program use the ",(0,s.jsx)(n.code,{children:"os"})," module to load the environment variables directly:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"#!/usr/bin/env python3\r\n\r\nimport os\r\n\r\n...\r\n\r\ndevice_id = os.getenv('DEVICE_ID')\n"})}),"\n",(0,s.jsx)(n.h2,{id:"further-information",children:"Further Information"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["More information on ",(0,s.jsx)(n.a,{href:"https://docs.python.org/3/library/argparse.html",children:"argparse"})]}),"\n",(0,s.jsxs)(n.li,{children:["More information on ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Shebang_(Unix)",children:"shebangs"})]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>o});var i=r(96540);const s={},t=i.createContext(s);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);