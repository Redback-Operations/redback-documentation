"use strict";(self.webpackChunkredback_documentation=self.webpackChunkredback_documentation||[]).push([[2826],{43187:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"cybersecurity/Blue Team/elf-stack-geoip","title":"elf-stack-geoip","description":"Last updated by \'17/12/2024\'","source":"@site/docs/cybersecurity/Blue Team/elf-stack-geoip.md","sourceDirName":"cybersecurity/Blue Team","slug":"/cybersecurity/Blue Team/elf-stack-geoip","permalink":"/redback-documentation/docs/cybersecurity/Blue Team/elf-stack-geoip","draft":false,"unlisted":false,"editUrl":"https://github.com/Redback-Operations/redback-documentation/blob/main/docs/cybersecurity/Blue Team/elf-stack-geoip.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Cowrie-Honeypot-Implementation-Guide","permalink":"/redback-documentation/docs/cybersecurity/Blue Team/Cowrie-Honeypot-Implementation-Guide"},"next":{"title":"pihole-setup","permalink":"/redback-documentation/docs/cybersecurity/Blue Team/pihole-setup"}}');var i=n(74848),a=n(28453);const r={sidebar_position:3},o="Setup guide for Elasticsearch, Kibana and Filebeat (in ubuntu for localhost)",l={},d=[{value:"Note: disabling security is only when you run in your localhost and not with redback server. When installing in redback server, make sure to enable all security and have password for your accounts. Please include the ssl certificates as well. The link provided above for the installation will guide you with that process. Ill pin a video below as well which walks you through setting it with the required security measures.",id:"note-disabling-security-is-only-when-you-run-in-your-localhost-and-not-with-redback-server-when-installing-in-redback-server-make-sure-to-enable-all-security-and-have-password-for-your-accounts-please-include-the-ssl-certificates-as-well-the-link-provided-above-for-the-installation-will-guide-you-with-that-process-ill-pin-a-video-below-as-well-which-walks-you-through-setting-it-with-the-required-security-measures",level:3},{value:"Note: I recommend using the file paths:",id:"note-i-recommend-using-the-file-paths",level:3},{value:"(Reason: these paths read the logs in your system. Just uncomment the path or remove the hash Infront. The file path you see in the screenshot is a log file that I created so it exists only in my system. The 2 paths mentioned above are common in all systems)",id:"reason-these-paths-read-the-logs-in-your-system-just-uncomment-the-path-or-remove-the-hash-infront-the-file-path-you-see-in-the-screenshot-is-a-log-file-that-i-created-so-it-exists-only-in-my-system-the-2-paths-mentioned-above-are-common-in-all-systems",level:3},{value:"Kibana setup and configurations in browser:",id:"kibana-setup-and-configurations-in-browser",level:2},{value:"Explanation:",id:"explanation",level:3}];function c(e){const s={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Last updated by:"})," buvan008, ",(0,i.jsx)(s.strong,{children:"Last updated on:"})," '17/12/2024'"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Last updated by:"})," buvan008, ",(0,i.jsx)(s.strong,{children:"Last updated on:"})," '17/12/2024'"]}),"\n",(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"setup-guide-for-elasticsearch-kibana-and-filebeat-in-ubuntu-for-localhost",children:"Setup guide for Elasticsearch, Kibana and Filebeat (in ubuntu for localhost)"})}),"\n",(0,i.jsx)(s.h1,{id:"installing-elastic-search",children:"Installing elastic search:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Start ubuntu vm"}),"\n",(0,i.jsxs)(s.li,{children:["Go this this link here: ",(0,i.jsx)(s.a,{href:"https://www.elastic.co/guide/en/elasticsearch/reference/8.16/deb.html#deb-repo",children:"https://www.elastic.co/guide/en/elasticsearch/reference/8.16/deb.html#deb-repo"})]}),"\n",(0,i.jsxs)(s.li,{children:["Then run these commands:\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(32708).A+"",width:"1920",height:"945"}),"\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(87359).A+"",width:"1920",height:"945"}),"\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(91030).A+"",width:"1920",height:"945"}),"\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(7209).A+"",width:"1920",height:"945"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The commands to run in terminal:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\u201cwget -qO - ",(0,i.jsx)(s.a,{href:"https://artifacts.elastic.co/GPG-KEY-elasticsearch",children:"https://artifacts.elastic.co/GPG-KEY-elasticsearch"})," | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg \u201c"]}),"\n",(0,i.jsx)(s.li,{children:"sudo apt-get install apt-transport-https"}),"\n",(0,i.jsxs)(s.li,{children:['echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] ',(0,i.jsx)(s.a,{href:"https://artifacts.elastic.co/packages/8.x/apt",children:"https://artifacts.elastic.co/packages/8.x/apt"}),' stable main" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list']}),"\n",(0,i.jsx)(s.li,{children:"sudo apt-get update && sudo apt-get install elasticsearch"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"these commands will install Elasticsearch in the vm."}),"\n",(0,i.jsx)(s.p,{children:"To start elasticsearch, use these:\r\nthese will enable elasticsearch services:"}),"\n",(0,i.jsx)(s.p,{children:"sudo /bin/systemctl daemon-reload\r\nsudo /bin/systemctl enable elasticsearch.service"}),"\n",(0,i.jsx)(s.p,{children:"these commands is used to start and stop elastic services:"}),"\n",(0,i.jsx)(s.p,{children:"sudo systemctl start elasticsearch.service\r\nsudo systemctl stop elasticsearch.service"}),"\n",(0,i.jsx)(s.p,{children:"now go to your terminal, go elasticsearch directory using this:\r\ncd /etc/elasticsearch\r\nin this directory, you will find a file called elasticsearch.yml. we need to configure it before running it."}),"\n",(0,i.jsxs)(s.p,{children:["Most of the configuration that exist is fine. But need to change some security features.\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(14363).A+"",width:"1920",height:"945"})]}),"\n",(0,i.jsx)(s.p,{children:"xpack.security.enabled: false\r\nxpack.security.enrollment.enabled: false"}),"\n",(0,i.jsx)(s.p,{children:"set these two features to false. After it you can save it and quit."}),"\n",(0,i.jsx)(s.h3,{id:"note-disabling-security-is-only-when-you-run-in-your-localhost-and-not-with-redback-server-when-installing-in-redback-server-make-sure-to-enable-all-security-and-have-password-for-your-accounts-please-include-the-ssl-certificates-as-well-the-link-provided-above-for-the-installation-will-guide-you-with-that-process-ill-pin-a-video-below-as-well-which-walks-you-through-setting-it-with-the-required-security-measures",children:"Note: disabling security is only when you run in your localhost and not with redback server. When installing in redback server, make sure to enable all security and have password for your accounts. Please include the ssl certificates as well. The link provided above for the installation will guide you with that process. Ill pin a video below as well which walks you through setting it with the required security measures."}),"\n",(0,i.jsxs)(s.p,{children:["Once the configuration is finished, go to browser and enter:\r\n",(0,i.jsx)(s.a,{href:"http://Localhost:9200",children:"http://Localhost:9200"}),"\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(16498).A+"",width:"1920",height:"945"})]}),"\n",(0,i.jsx)(s.p,{children:"This should show you the elastic interface. Elastic itself doesn\u2019t have an interface, that\u2019s where we use Kibana, which is integrated with elastic for visualization."}),"\n",(0,i.jsx)(s.h1,{id:"installing-kibana",children:"Installing Kibana:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["go to your browser and use this link: ",(0,i.jsx)(s.a,{href:"https://www.elastic.co/guide/en/kibana/current/deb.html",children:"https://www.elastic.co/guide/en/kibana/current/deb.html"})]}),"\n",(0,i.jsxs)(s.li,{children:["now we have already installed the pre \u2013 requisites like elastic pgp key, transport https and keys that\u2019s required. So, skip to this part:\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(63549).A+"",width:"1920",height:"945"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Run this command to install kibana:\r\nsudo apt-get update && sudo apt-get install Kibana"}),"\n",(0,i.jsxs)(s.p,{children:["after installing kibana, to enable it and start and stop, use these commands:\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(22310).A+"",width:"1920",height:"945"})]}),"\n",(0,i.jsx)(s.p,{children:"sudo /bin/systemctl daemon-reload\r\nsudo /bin/systemctl enable kibana.service"}),"\n",(0,i.jsx)(s.p,{children:"sudo systemctl start kibana.service\r\nsudo systemctl stop kibana.service"}),"\n",(0,i.jsx)(s.p,{children:"kibana\u2019s configuration is fine as is. Incase if you need to access the directory and configure something, use this command:\r\ncd /etc/kibana"}),"\n",(0,i.jsxs)(s.ol,{start:"3",children:["\n",(0,i.jsxs)(s.li,{children:["now go to your browser and enter the url:\r\nlocalhost:5601\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(61327).A+"",width:"1920",height:"945"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The setup should take a while to load in the browser. Wait for it and choose to explore on your option and that should load this interface in your browser."}),"\n",(0,i.jsx)(s.h1,{id:"filebeat-installation",children:"Filebeat installation:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["use the command:\r\n",(0,i.jsx)(s.strong,{children:"apt-get install filebeat"}),"\r\nthis should install filebeat in the system."]}),"\n"]}),"\n",(0,i.jsx)(s.h1,{id:"filebeat-configuration",children:"Filebeat configuration:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["go to filebeat directory using:\r\n",(0,i.jsx)(s.strong,{children:"cd /etc/filebeat"}),"\r\nyou will find filebeat.yml. to edit it use\r\n",(0,i.jsx)(s.strong,{children:"nano filebeat.yml"}),"\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(3371).A+"",width:"1920",height:"945"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"First configure filebeat.input. this is where the you can set paths to read logs.\r\nSection Explanation"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"filebeat.inputs:"}),"\r\n\u2022\tDefines the list of inputs that Filebeat will monitor to collect data. In this case, the input type is log."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"type: log"}),"\r\n\u2022\tSpecifies the input type as log. This means Filebeat will monitor log files for new entries."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"id: my-filestream-id"}),"\r\n\u2022\tAssigns a unique ID to the input configuration. This can help manage and debug multiple inputs."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"enabled: true"}),"\r\n\u2022\tIndicates that this input configuration is active."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"paths:"}),"\r\n\u2022\tLists the file paths to monitor.\r\n\u2022\t",(0,i.jsx)(s.strong,{children:"Example: - /tmp/enriched_network_logs_with_geoip.json is an active path, while others are commented out (e.g., - /tmp/sample_network_logs.json)."}),"\r\n\u2022\tFilebeat will monitor these files for new log entries and forward them for further processing."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"json:"}),"\r\n\u2022\tSpecifies settings for processing JSON-formatted log files."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"#JSON Configuration Options"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"keys_under_root: true"})}),"\n"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Brings the JSON fields directly into the root of the event in Elasticsearch"}),"\n",(0,i.jsxs)(s.li,{children:["For example, if the JSON log contains ",(0,i.jsx)(s.code,{children:'{"field1": "value1", "field2": "value2"}'}),", these fields will appear at the root level instead of being nested under a JSON object"]}),"\n"]}),"\n",(0,i.jsxs)(s.ol,{start:"2",children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"add_error_key: true"}),"\r\n\u2022\tAdds an error key to the event if there is an issue parsing the JSON.\r\n\u2022\tUseful for debugging malformed logs or unexpected structures."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"overwrite_keys: true"}),"\r\n\u2022\tAllows fields from the JSON logs to overwrite existing fields in the event.\r\n\u2022\tFor instance, if a JSON log contains a field timestamp that differs from Filebeat\u2019s default timestamp, the JSON value will overwrite it."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"note-i-recommend-using-the-file-paths",children:"Note: I recommend using the file paths:"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"- /var/log/*.log"}),(0,i.jsx)(s.br,{}),"\n",(0,i.jsx)(s.strong,{children:"- c:\\programdata\\elasticsearch\\logs*"})]}),"\n",(0,i.jsx)(s.h3,{id:"reason-these-paths-read-the-logs-in-your-system-just-uncomment-the-path-or-remove-the-hash-infront-the-file-path-you-see-in-the-screenshot-is-a-log-file-that-i-created-so-it-exists-only-in-my-system-the-2-paths-mentioned-above-are-common-in-all-systems",children:"(Reason: these paths read the logs in your system. Just uncomment the path or remove the hash Infront. The file path you see in the screenshot is a log file that I created so it exists only in my system. The 2 paths mentioned above are common in all systems)"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"QRPS",src:n(33520).A+"",width:"1920",height:"945"})}),"\n",(0,i.jsx)(s.h1,{id:"edit-configuration",children:"Edit configuration:"}),"\n",(0,i.jsxs)(s.p,{children:['Under dashboards: setup.dashboards.enabled: true\r\nThis will help in generating dashboards.\r\nUnder kibana : host: "localhost:5601"\r\nThis will connect filebeat with kibana.\r\n',(0,i.jsx)(s.img,{alt:"QRPS",src:n(30425).A+"",width:"1920",height:"945"})]}),"\n",(0,i.jsxs)(s.p,{children:['Under elasticsearch output:\r\nhosts: ["localhost:9200"]\r\n',(0,i.jsx)(s.img,{alt:"QRPS",src:n(37350).A+"",width:"1920",height:"945"})]}),"\n",(0,i.jsx)(s.h1,{id:"explanation-of-each-processor",children:"Explanation of Each Processor"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"add_host_metadata:"}),"\r\n\u2022\tAdds metadata about the host where Filebeat is running, such as the hostname, IP addresses, and operating system details.\r\n\u2022\tCondition:\r\n\u2022\tOnly applies when the log event does not have the tag forwarded.\r\n\u2022\tThis prevents redundant host metadata from being added to logs already tagged as forwarded (e.g., logs originating from other systems)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"add_locale:"}),"\r\n\u2022\tAdds locale information (e.g., time zone and language settings) of the system running Filebeat.\r\n\u2022\tindicates default behavior without any additional configuration."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"add_cloud_metadata:"}),"\r\n\u2022\tAdds metadata about the cloud environment where Filebeat is running, such as cloud provider (AWS, Azure, GCP), instance ID, region, and machine type.\r\n\u2022\tUseful for analyzing logs from cloud-based systems."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"add_docker_metadata:"}),"\r\n\u2022\tAdds metadata for logs coming from Docker containers, such as container ID, image name, and labels.\r\n\u2022\tUse Case:\r\n\u2022\tHelps identify which container generated a particular log, especially in environments with multiple containers."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"add_kubernetes_metadata:"}),"\r\n\u2022\tAdds Kubernetes-specific metadata to logs, including pod name, namespace, and labels.\r\n\u2022\tUse Case:\r\n\u2022\tEssential for logs in Kubernetes clusters to trace logs back to specific pods or namespaces."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"decode_json_fields:"}),"\r\n\u2022\tDecodes JSON-formatted strings within specific fields into structured data.\r\n\u2022\t",(0,i.jsx)(s.strong,{children:"Parameters:"}),"\r\n\u2022\t",(0,i.jsx)(s.strong,{children:"fields:"}),' ["message"]: Specifies the field(s) to decode, in this case, the message field.\r\n\u2022\t',(0,i.jsx)(s.strong,{children:"target:"}),' "parsed_json": The decoded JSON is stored in the parsed_json field.\r\n\u2022\t',(0,i.jsx)(s.strong,{children:"overwrite_keys:"})," true: If there are conflicts between decoded JSON keys and existing keys, the decoded values will overwrite the existing ones.\r\n\u2022\tUse Case:\r\n\u2022\tUseful for logs that embed JSON strings in fields like message. Decoding makes the data searchable and analysable in Elasticsearch."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The yml files configuration for elastic, Kibana and filebeat are done now."}),"\n",(0,i.jsx)(s.h2,{id:"kibana-setup-and-configurations-in-browser",children:"Kibana setup and configurations in browser:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Go to kibana in browser: localhost:5601"}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Click on the menu bar on top left and scroll down to management and go to stack management.\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(43167).A+"",width:"1920",height:"945"})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["In management go to index management. This is the place where you can mange your indexes\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(89956).A+"",width:"1920",height:"945"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h1,{id:"what-are-indexes",children:"What are indexes?"}),"\n",(0,i.jsx)(s.p,{children:"An index in Elasticsearch is a collection of documents that share similar characteristics. It acts as a logical namespace for storing and managing data."}),"\n",(0,i.jsx)(s.h1,{id:"key-features",children:"Key Features:"}),"\n",(0,i.jsx)(s.p,{children:"\u2022\tStructure: Data in an index is stored in JSON format, where each document has fields and values."}),"\n",(0,i.jsx)(s.p,{children:"\u2022\tOrganization: Think of it as a database table, but more flexible and schema-less by default."}),"\n",(0,i.jsx)(s.p,{children:"\u2022\tSearch: You can query an index to retrieve specific documents using Elasticsearch Query DSL."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Use in Kibana:"}),"\r\n\u2022\tKibana connects to Elasticsearch indexes to analyze and visualize the data stored in them."]}),"\n",(0,i.jsx)(s.p,{children:"\u2022\tFor example, an index named network-logs might store network traffic logs."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Examples of Indexes:"}),"\r\n\u2022\tfilebeat-* (logs ingested by Filebeat)\r\n\u2022\tlogs-* (generic logs)\r\n\u2022\tmetrics-* (metrics data)"]}),"\n",(0,i.jsxs)(s.p,{children:["now go back to the main menu and go to analytics and then to discover:\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(43853).A+"",width:"1920",height:"945"})]}),"\n",(0,i.jsxs)(s.p,{children:["in this go to the top left and you find data view, click on it. By default since we installed filebeat there will be an index patter called filebeat-*. Click on it and you will see all the logs coming through filebeat.\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(38994).A+"",width:"1920",height:"945"})]}),"\n",(0,i.jsxs)(s.p,{children:["You can set option to view specific fields that are available. For example, now Ill choose host ip filed with will show the ip of host in the logs:\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(53819).A+"",width:"1920",height:"945"})]}),"\n",(0,i.jsx)(s.h1,{id:"setting-dashboards",children:"Setting dashboards:"}),"\n",(0,i.jsxs)(s.p,{children:["Go to the main menu and select dashboards. In search bar search for sudo.\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(91840).A+"",width:"1920",height:"945"})]}),"\n",(0,i.jsx)(s.p,{children:"If you add that dashboard, you can see the Sudo commands that were run with the system. On the top right you can also see 3 others different dashboards, ssh login, new users and groups and syslogs. You can click on each dashboard and see the logs of it and the charts."}),"\n",(0,i.jsx)(s.h1,{id:"sudo",children:"Sudo:"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"QRPS",src:n(69961).A+"",width:"1920",height:"945"})}),"\n",(0,i.jsx)(s.h1,{id:"syslogs",children:"Syslogs:"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"QRPS",src:n(24094).A+"",width:"1920",height:"945"})}),"\n",(0,i.jsx)(s.h1,{id:"new-users-and-groups",children:"New users and groups:"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"QRPS",src:n(76583).A+"",width:"1920",height:"945"})}),"\n",(0,i.jsx)(s.h1,{id:"using-geoip-to-locate-the-ip-address",children:"Using geoip to locate the Ip address:"}),"\n",(0,i.jsx)(s.p,{children:"For visualizing the logs in kibana. We need geoip. Geoip is a location database which locates ip address with longitude and latitude. To do that ill put down a example python code. This will use the existing log file and convert it with geoip modules:"}),"\n",(0,i.jsx)(s.h1,{id:"python-code-example",children:"Python Code Example"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:'\r\nimport json\r\nimport geoip2.database\r\n\r\n# File paths\r\nlog_file = "/tmp/generated_logs.json"  # Input raw logs\r\ngeoip_db = "/path/to/GeoLite2-City.mmdb"  # GeoIP database\r\noutput_file = "/tmp/processed_logs.json"  # Output enriched logs\r\n\r\n# Load GeoIP database\r\ngeo_reader = geoip2.database.Reader(geoip_db)\r\n\r\n# Function to fetch geographical data\r\ndef get_geo_data(ip):\r\n    try:\r\n        response = geo_reader.city(ip)\r\n        return {\r\n            "city": response.city.name,\r\n            "country": response.country.name,\r\n            "latitude": response.location.latitude,\r\n            "longitude": response.location.longitude\r\n        }\r\n    except Exception as e:\r\n        print(f"Error processing IP {ip}: {e}")\r\n        return None\r\n\r\n# Process logs\r\nwith open(log_file, "r") as infile, open(output_file, "w") as outfile:\r\n    for line in infile:\r\n        log = json.loads(line)  # Parse the log entry\r\n        geo_data = get_geo_data(log["destination_ip"])  # Get GeoIP data for destination IP\r\n        if geo_data:\r\n            log["geo_location"] = geo_data  # Add geographical data to the log\r\n        outfile.write(json.dumps(log) + "\\n")  # Save enriched log\r\n\r\nprint(f"Processed logs saved at {output_file}")\r\n\n'})}),"\n",(0,i.jsx)(s.h3,{id:"explanation",children:"Explanation:"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Import Libraries:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"json"}),": Parse and write JSON logs."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"geoip2.database"}),": Fetch GeoIP data for IP addresses."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"File Paths:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Define paths for the raw log file, GeoIP database, and output file."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Open GeoIP Database:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Load the GeoLite2-City.mmdb database for IP lookups."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Initialize File Handling:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Open the raw log file for reading and create an output file for processed logs."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Process Each Log Entry:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Read and parse logs from the input file line by line."}),"\n",(0,i.jsx)(s.li,{children:"Extract IP addresses (client_ip, destination_ip, source_ip)."}),"\n",(0,i.jsx)(s.li,{children:"For each IP address, query the GeoIP database to retrieve geolocation details like city, country, latitude, and longitude."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Append GeoIP Data:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Add geolocation details to each log entry under relevant keys."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Write Processed Logs:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Write updated log entries (with geolocation data) to the output file."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Error Handling:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Catch and log any exceptions, such as invalid IP addresses or missing data in the GeoIP database."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Close Files and Cleanup:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Ensure all files are properly closed after processing."}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Now after doing this, replace the filepath in ",(0,i.jsx)(s.code,{children:"filebeat.inputs"})," in ",(0,i.jsx)(s.code,{children:"filebeat.yml"}),". Then go to Kibana \u2013 Maps \u2013 Create Maps:"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"QRPS",src:n(77854).A+"",width:"1920",height:"945"})}),"\n",(0,i.jsxs)(s.p,{children:["Then go to ",(0,i.jsx)(s.strong,{children:"Add Layers"})," and then select ",(0,i.jsx)(s.strong,{children:"Documents"}),".\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(63605).A+"",width:"1920",height:"945"})]}),"\n",(0,i.jsxs)(s.p,{children:["Then select the data views that you want (that have the logs) and that should locate the IP address in the maps.\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(27692).A+"",width:"1920",height:"945"}),"\r\n",(0,i.jsx)(s.img,{alt:"QRPS",src:n(87587).A+"",width:"1920",height:"945"})]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},43167:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/browser1-ebd30a3024225f9798dd1f643e7b28e3.png"},89956:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/browser2-dd6fcf6c16021c98eb871fd865e9e0a7.png"},43853:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/browser3-52b787584ae640af211b0725a2b1db43.png"},38994:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/browser4-32ed7d0ef341a46910537153291a51b0.png"},53819:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/browser5-551b40b7227afeca6bb8cb828f40708d.png"},91840:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/browser6-e360c58275b78b5cfb6ec848158a34e1.png"},69961:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/browser7-17430c68fc15476327db1d827f07efb0.png"},24094:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/browser8-f84dd0ceed8d06e2f960b769c94b4a6f.png"},76583:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/browser9-a57366ef22fc2430d7f5811cdd54d290.png"},32708:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/elastic1-91dc206d1edc4680ae5b8f148137d9a9.png"},87359:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/elastic2-c116a698c9d502f9355b60e4aa030ede.png"},91030:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/elastic3-10aa4becdb76f21c3b4c8ba75650aa69.png"},7209:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/elastic4-d15e729c22666a721d730ec5c71ea10f.png"},14363:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/elastic6-fed8808d3b96c2e67fc5aa9454d9168e.png"},16498:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/elastic7-e4aa40c81834b44a3e988710ee913d50.png"},3371:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/filebeat1-7ca495dabb04f5a07f5734ef9acc0ce2.png"},33520:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/filebeat2-a20cbd72319f88ff2422668d005672ba.png"},30425:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/filebeat3-8c6773bcbfb1322c504745ee6eaa1527.png"},37350:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/filebeat4-9f5700828b7f3194af1e3a6acaebfdff.png"},63549:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/kibana1-baa2f7a60b14ffb5be3804c392ce7faf.png"},22310:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/kibana2-11e99277d2ed7efe36fdb848fedb0b4e.png"},61327:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/kibana3-ec418592fcb442ad8aba0575f331d325.png"},77854:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/maps1-4e4aeef619f64023d4877e4cb42ae82e.png"},63605:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/maps2-c46bac4901972565edb6d999405d0416.png"},27692:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/maps3-e304fc0a8e70d2a499e2e222511d4c68.png"},87587:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/maps4-fab2d4588a46c6e491528ddbd640ba9f.png"},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var t=n(96540);const i={},a=t.createContext(i);function r(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);