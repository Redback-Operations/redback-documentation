"use strict";(self.webpackChunkredback_documentation=self.webpackChunkredback_documentation||[]).push([[6162],{61443:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"web-mobile-app-dev/frontend/new-routes","title":"new-routes","description":"Last updated by \'08/08/2024\'","source":"@site/docs/web-mobile-app-dev/frontend/new-routes.md","sourceDirName":"web-mobile-app-dev/frontend","slug":"/web-mobile-app-dev/frontend/new-routes","permalink":"/redback-documentation/docs/web-mobile-app-dev/frontend/new-routes","draft":false,"unlisted":false,"editUrl":"https://github.com/Redback-Operations/redback-documentation/blob/main/docs/web-mobile-app-dev/frontend/new-routes.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"sidebar_label":"Creating a new page/route"},"sidebar":"tutorialSidebar","previous":{"title":"Redback UI","permalink":"/redback-documentation/docs/web-mobile-app-dev/frontend/redback-ui"},"next":{"title":"Creating a new component","permalink":"/redback-documentation/docs/web-mobile-app-dev/frontend/new-components"}}');var r=n(74848),a=n(28453);const i={sidebar_position:5,sidebar_label:"Creating a new page/route"},s="Pages and Routes",l={},d=[{value:"Creating a page",id:"creating-a-page",level:2},{value:"Page vs route",id:"page-vs-route",level:3},{value:"Adding a route for your page",id:"adding-a-route-for-your-page",level:2},{value:"Breaking up your page into components",id:"breaking-up-your-page-into-components",level:2},{value:"Further reading",id:"further-reading",level:2}];function c(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Last updated by:"})," Leesa Ward, ",(0,r.jsx)(t.strong,{children:"Last updated on:"})," '08/08/2024'"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Last updated by:"})," Leesa Ward, ",(0,r.jsx)(t.strong,{children:"Last updated on:"})," '08/08/2024'"]}),"\n",(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"pages-and-routes",children:"Pages and Routes"})}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Document Creation:"})," 7 May, 2024. ",(0,r.jsx)(t.strong,{children:"Last Edited:"})," 7 May, 2024. ",(0,r.jsx)(t.strong,{children:"Authors:"})," Leesa Ward."]}),"\n"]}),"\n",(0,r.jsx)(t.admonition,{title:"Definition",type:"info",children:(0,r.jsxs)(t.p,{children:["A ",(0,r.jsx)(t.strong,{children:"page"})," is a ",(0,r.jsx)(t.strong,{children:"collection of components"})," that make up a complete view in an application. Pages are used to structure the user interface and define the layout of the application."]})}),"\n",(0,r.jsxs)(t.p,{children:["In the context of a web application such as the ones we are building, you will generally not build an entire page as one file: instead, you will usually create a page by combining multiple components. Often you will work on ",(0,r.jsx)(t.em,{children:"part"})," of a page, because global elements such as navigation already exist."]}),"\n",(0,r.jsxs)(t.p,{children:["When you view what you think of as a page in a web application, you are actually seeing a ",(0,r.jsx)(t.strong,{children:"route"}),". It is important to understand this terminology as we are using ",(0,r.jsx)(t.a,{href:"https://reactrouter.com/en/main",children:"React Router"})," for navigation within our app."]}),"\n",(0,r.jsx)(t.admonition,{title:"Definition",type:"info",children:(0,r.jsxs)(t.p,{children:["A ",(0,r.jsx)(t.strong,{children:"route"})," is a URL that corresponds to a specific view in the application, made up of many components, several of which could be shared across multiple routes and/or down multiple levels of nesting."]})}),"\n",(0,r.jsx)(t.p,{children:'The term "page" and "route" may be used synonymously in some situations, but it is important to understand the distinction and that when building single-page applications (e.g., React apps) that need to think in components and routes, rather than in terms of entire pages as standalone entities.'}),"\n",(0,r.jsx)(t.h2,{id:"creating-a-page",children:"Creating a page"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://www.npmjs.com/package/generate-react-cli",children:"generate-react-cli"})," is set up to generate the boilerplate code required for a new route using our pre-defined templates. Syntactically, they are basically the same as components, but it's important to separate them so we know what's what."]}),"\n",(0,r.jsxs)(t.p,{children:["To create a new page, run the following command in your terminal, replacing ",(0,r.jsx)(t.code,{children:"PageName"})," with the name of your new page."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npx generate-react-cli component PageName --type=route\n"})}),"\n",(0,r.jsxs)(t.p,{children:["A new folder named with your page name will be created in the ",(0,r.jsx)(t.code,{children:"src/routes"})," directory, containing the following files:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"ComponentName.tsx"}),": the main React file for your route"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"ComponentName.styled.ts"}),": where styles are defined, using ",(0,r.jsx)(t.a,{href:"https://styled-components.com/",children:"styled-components"})," (",(0,r.jsx)(t.strong,{children:"see warning below"}),")"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"ComponentName.test.tsx"}),": the unit test file. A basic example is included. Please add further tests as relevant to your page."]}),"\n"]}),"\n",(0,r.jsx)(t.admonition,{type:"warning",children:(0,r.jsx)(t.p,{children:"Generally for a route/page, there should be little to nothing in the style file because your route should be made up of components that have their own styles. If you find you're putting a lot of styles in this file, may want to consider refactoring the elements in your page into individual components."})}),"\n",(0,r.jsx)(t.h3,{id:"page-vs-route",children:"Page vs route"}),"\n",(0,r.jsx)(t.p,{children:"As you start building your page, this is where the page vs. route distinction becomes important, particularly if you are building a page multiple levels deep in the navigation and URL structure."}),"\n",(0,r.jsx)(t.p,{children:'Say for example you\'ve been tasked with building a page for a Monthly Report that is accessed via My Profile > Reports > Monthly Report. There will probably be global page elements and section-specific page elements at each level, and you should not build or add these in your Monthly Report "page" file. An example structure is:'}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-plaintext",children:"- /src\r\n    - main.tsx (entry point for the app, loads <Root/> route and defines routes/URL paths)\r\n    - /components\r\n        - (individual component folders)\r\n    - /routes\r\n        - /Root\r\n            - Root.tsx (contains components that should appear on all pages)\r\n        - /MyProfile\r\n            - MyProfile.tsx (contains components that should appear on all My Profile pages)\r\n            - /Reports\r\n                - Reports.tsx (contains components that should appear on all Reports pages)\r\n                - /MonthlyReport\r\n                    - MonthlyReport.tsx (contains components that are specific to the Monthly Report page)\r\n\n"})}),"\n",(0,r.jsx)(t.h2,{id:"adding-a-route-for-your-page",children:"Adding a route for your page"}),"\n",(0,r.jsxs)(t.p,{children:['At this stage, your "page" is basically a React component that\'s in a different folder to the main components. To actually see your "page" in the application, you need to add a route for it. This is done in the ',(0,r.jsx)(t.code,{children:"src/main.tsx"})," file."]}),"\n",(0,r.jsx)(t.p,{children:"The routes for the Monthly Report example described above would look something like this:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"// src/main.tsx\r\n{\r\n\t//...other router config\r\n\tchildren: [\r\n\t\t{\r\n\t\t\tpath: '/',\r\n\t\t\telement: <Homepage/>,\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: 'about',\r\n\t\t\telement: <AboutPage/>,\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: 'my-profile',\r\n\t\t\telement: <MyProfile/>,\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: 'reports',\r\n\t\t\t\t\telement: <Reports/>,\r\n\t\t\t\t\tchildren: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath: 'monthly-report',\r\n\t\t\t\t\t\t\telement: <MonthlyReport/>,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:['Your Monthly Report "page" should now be visible at ',(0,r.jsx)(t.code,{children:"/my-profile/reports/monthly-report"})," in your application."]}),"\n",(0,r.jsxs)(t.p,{children:["For more information about routing, see the ",(0,r.jsx)(t.a,{href:"/redback-documentation/docs/web-mobile-app-dev/frontend/react-router",children:"React Router"})," page."]}),"\n",(0,r.jsx)(t.h2,{id:"breaking-up-your-page-into-components",children:"Breaking up your page into components"}),"\n",(0,r.jsxs)(t.p,{children:["As mentioned briefly above, your page should be made up of components. If you find you're putting a lot of code in your page file, you should consider breaking it up into smaller components. This will make your code easier to read, maintain, and test; and will allow use of your components on other pages so we don't duplicate functionality or design elements unnecessarily. For more information, proceed to the ",(0,r.jsx)(t.a,{href:"/redback-documentation/docs/web-mobile-app-dev/frontend/new-components",children:"Creating a new component"})," guide."]}),"\n",(0,r.jsx)(t.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"http://localhost:3000/redback-documentation/docs/web-mobile-app-dev/frontend/dos-donts#tech-stack",children:"Dos and Don'ts - Tech Stack"})," - Redback docs"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var o=n(96540);const r={},a=o.createContext(r);function i(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);