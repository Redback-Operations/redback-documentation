"use strict";(self.webpackChunkredback_documentation=self.webpackChunkredback_documentation||[]).push([[971],{50352:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"project-2/Data Science and Analytics/VoiceAssisstant","title":"VoiceAssisstant","description":"Last updated by \'17/12/2024\'","source":"@site/docs/project-2/Data Science and Analytics/VoiceAssisstant.md","sourceDirName":"project-2/Data Science and Analytics","slug":"/project-2/Data Science and Analytics/VoiceAssisstant","permalink":"/redback-documentation/docs/project-2/Data Science and Analytics/VoiceAssisstant","draft":false,"unlisted":false,"editUrl":"https://github.com/Redback-Operations/redback-documentation/blob/main/docs/project-2/Data Science and Analytics/VoiceAssisstant.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"SleepDisorder","permalink":"/redback-documentation/docs/project-2/Data Science and Analytics/SleepDisorder"},"next":{"title":"Device Design","permalink":"/redback-documentation/docs/category/device-design"}}');var i=t(74848),r=t(28453);const a={sidebar_position:8},o="Voice Assistant feature for Elderly Care Wearable.",l={},c=[{value:"Implementation",id:"implementation",level:2},{value:"Structure",id:"structure",level:3},{value:"Voice Assistant Runtime",id:"voice-assistant-runtime",level:4},{value:"Training",id:"training",level:4},{value:"Future Plans",id:"future-plans",level:2},{value:"Local Development",id:"local-development",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Last updated by:"})," Lachlan, ",(0,i.jsx)(n.strong,{children:"Last updated on:"})," '17/12/2024'"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Last updated by:"})," Lachlan, ",(0,i.jsx)(n.strong,{children:"Last updated on:"})," '17/12/2024'"]}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"voice-assistant-feature-for-elderly-care-wearable",children:"Voice Assistant feature for Elderly Care Wearable."})}),"\n",(0,i.jsx)(n.p,{children:"The goal of this sub-project is to develop and integrate voice assistant functionality into the Elderly care wearable device.\r\nThis is done with the intention of offering a useful method of interacting with and receiving assisstance from the wearable and to bolster the devices accessibility."}),"\n",(0,i.jsx)(n.p,{children:"This feature aims to be able to answer verbal queries relating to the user's daily scheduling and provide information relating to the user's health based on locally recorded data."}),"\n",(0,i.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsx)(n.p,{children:"At present the voice assistant is able to repond to queries relating to local time, weather and basic assistance to reported symptoms.\r\nFeatures in active development include mental health counselling / guidance, making calls, dictating messages and conducting health assessments."}),"\n",(0,i.jsx)(n.p,{children:"The project uses the following external sources as part of its design:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.pygame.org/docs/",children:"pygame"}),": Python UI Library"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/Uberi/speech_recognition",children:"speech_recognition"}),": Library for parsing spoken word and transcribing to text"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/NeuralNine/neuralintents",children:"NeuralIntents"}),": Library created by python Youtuber / Blogger Florian Dedov aka NeuralNine for rudimentry Voice Assistants."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.crummy.com/software/BeautifulSoup/bs4/doc/",children:"BeautifulSoup"}),": The most popular library for parsing HTML and XML."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/kaushiksoni10/locationtagger",children:"LocationTagger"}),": A Python library implementing location extraction from NLP"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/psf/requests",children:"requests"}),": A library for generating HTTP/1.1 requests"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"structure",children:"Structure"}),"\n",(0,i.jsx)(n.h4,{id:"voice-assistant-runtime",children:"Voice Assistant Runtime"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"main.py"}),(0,i.jsx)(n.br,{}),"\n","Spins up the UI module ",(0,i.jsx)(n.code,{children:"pygame_win"})," and ",(0,i.jsx)(n.code,{children:"speech_to_text"})," modules and executes them in parallel,",(0,i.jsx)(n.br,{}),"\n","Handles overall program execution and termination."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"pygame_win.py"}),(0,i.jsx)(n.br,{}),"\n","Module implementing UI classes and functions from pygame."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"speech_to_text.py"}),(0,i.jsx)(n.br,{}),"\n","Wrapper for the speech_recognition library functions that records user spoken queuries and attempts to use Google Speech recognition to convert it into text."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"generate_response.py"}),(0,i.jsx)(n.br,{}),"\n","Defines the logic for responding to user queries across a number of categories.\r\nCreates an assisstant object based on the ",(0,i.jsx)(n.code,{children:"intents.json"})," and supplied pre-trained voice assistant model."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"text_to_speech.py"}),(0,i.jsx)(n.br,{}),"\n","Calls the get_response function from the ",(0,i.jsx)(n.code,{children:"generate_response.py"})," module,",(0,i.jsx)(n.br,{}),"\n","Verbally outputs the generated response."]}),"\n",(0,i.jsx)(n.h4,{id:"training",children:"Training"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"train_model.py"}),"\r\nTrains the model based on the neuralintents.assistants module and the ",(0,i.jsx)(n.code,{children:"intents.json"})," file.",(0,i.jsx)(n.br,{}),"\n","Fits the model with ",(0,i.jsx)(n.code,{children:"epoch=50"}),".\r\nOutputs model to ",(0,i.jsx)(n.code,{children:"./models/"})," as:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"[model_name].keras - A zip file containing the config of the model, .h5 state with the weights and biases and a JSON metadata file"}),"\n",(0,i.jsx)(n.li,{children:"[model_name]_intents.pkl - A serialized byte stream of the intents object structure."}),"\n",(0,i.jsx)(n.li,{children:"[model_name]_words.pkl - A serialized byte stream of the bag-of-words object structure the model was trained on."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"future-plans",children:"Future Plans"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Broaden scope of the voice assistants subject matter"}),"\n",(0,i.jsx)(n.li,{children:"Support more languages / multilingualism"}),"\n",(0,i.jsx)(n.li,{children:"Build compatability with emerging health care technologies"}),"\n",(0,i.jsx)(n.li,{children:"Implementation into the wearable."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"local-development",children:"Local Development"}),"\n",(0,i.jsx)(n.p,{children:"To run the project on a local machine, follow these steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Clone the repository from GitHub"}),"\n",(0,i.jsx)(n.li,{children:"Navigate to the Voice Assistant directory"}),"\n",(0,i.jsx)(n.li,{children:"Install the required dependencies using pip install -r docs/requirements.txt"}),"\n",(0,i.jsx)(n.li,{children:"Use the code in neural_intents_code/assistants.py to update the neuralintents library code. NOTE: This step is required as for this feature, parts of the neuralintents>assistants.py code are updated."}),"\n",(0,i.jsx)(n.li,{children:"To retrain a model, run the train_model.py script"}),"\n",(0,i.jsx)(n.li,{children:"Run the main.py script to start the voice assistant feature"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Document Creation:"})," 5 September 2024. ",(0,i.jsx)(n.strong,{children:"Last Edited:"})," 5 September 2024. ",(0,i.jsx)(n.strong,{children:"Authors:"})," Lachlan Costigan"]})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(96540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);