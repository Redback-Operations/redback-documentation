"use strict";(self.webpackChunkredback_documentation=self.webpackChunkredback_documentation||[]).push([[4217],{3583:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"cybersecurity/SecDevOps Team/secure-code/TLSPlan","title":"TLSPlan","description":"Last updated by \'03/12/2024\'","source":"@site/docs/cybersecurity/SecDevOps Team/secure-code/TLSPlan.md","sourceDirName":"cybersecurity/SecDevOps Team/secure-code","slug":"/cybersecurity/SecDevOps Team/secure-code/TLSPlan","permalink":"/redback-documentation/docs/cybersecurity/SecDevOps Team/secure-code/TLSPlan","draft":false,"unlisted":false,"editUrl":"https://github.com/Redback-Operations/redback-documentation/blob/main/docs/cybersecurity/SecDevOps Team/secure-code/TLSPlan.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Secure Code Development","permalink":"/redback-documentation/docs/category/secure-code-development"},"next":{"title":"TLS_Proof_of_Concept_plus_automation","permalink":"/redback-documentation/docs/cybersecurity/SecDevOps Team/secure-code/TLS_Proof_of_Concept_plus_automation"}}');var r=t(74848),s=t(28453);const o={sidebar_position:1},a="TLS Solution for MQTT and CoAP Protocols",c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Definitions",id:"definitions",level:3},{value:"TLS Solution",id:"tls-solution",level:3},{value:"Application of TLS Solution",id:"application-of-tls-solution",level:3},{value:"Current State",id:"current-state",level:2},{value:"Overview",id:"overview",level:3},{value:"Current Architecture",id:"current-architecture",level:3},{value:"Current Policies",id:"current-policies",level:3},{value:"Risks - MQTT",id:"risks---mqtt",level:3},{value:"Risks - CoAP",id:"risks---coap",level:3},{value:"Proposed Future State",id:"proposed-future-state",level:2},{value:"Overview",id:"overview-1",level:3},{value:"Architecture - MQTT",id:"architecture---mqtt",level:3},{value:"MQTT Server TLS Implementation",id:"mqtt-server-tls-implementation",level:3},{value:"Raspberry Pi TLS Implementation for mTLS option",id:"raspberry-pi-tls-implementation-for-mtls-option",level:3},{value:"Architecture - CoAP",id:"architecture---coap",level:3},{value:"CoAP Implementation",id:"coap-implementation",level:3},{value:"Risk Mitigation and Best Practice",id:"risk-mitigation-and-best-practice",level:3},{value:"Feasibility Assessment",id:"feasibility-assessment",level:3},{value:"Change Management",id:"change-management",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Last updated by:"})," T_Apperley, ",(0,r.jsx)(n.strong,{children:"Last updated on:"})," '03/12/2024'"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Last updated by:"})," T_Apperley, ",(0,r.jsx)(n.strong,{children:"Last updated on:"})," '03/12/2024'"]}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tls-solution-for-mqtt-and-coap-protocols",children:(0,r.jsx)(n.strong,{children:"TLS Solution for MQTT and CoAP Protocols"})})}),"\n",(0,r.jsx)(n.h1,{id:"business-and-implementation-plan",children:"Business and Implementation Plan"}),"\n",(0,r.jsx)(n.p,{children:"By Candice Smith 220484184, 25/07/2024"}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.p,{children:'Redback Operations is dedicated to revolutionizing the fitness\r\nexperience by developing state-of-the-art connected fitness devices that\r\nnot only enhance the enjoyment of physical activity but also its\r\neffectiveness. These devices are designed to transmit information\r\nregarding the identity, behaviours and health of its users, data\r\noutlined by the Redback Operations Security Guidelines as being\r\nsensitive information, protected by the Privacy Act 1988 ("Privacy\r\nAct"). For this reason, ensuring that communication is secure is of\r\nforemost importance. With this report we seek to outline the current\r\nstate of security for data in transit from Redback Operations devices\r\nutilising either the MQTT or CoAP protocols. We seek to outline\r\nassociated risk and propose an implementation plan for a solution that\r\nwill enhance the security posture across all associated devices.'}),"\n",(0,r.jsx)(n.h3,{id:"definitions",children:"Definitions"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Term"}),(0,r.jsx)(n.th,{children:"Definition"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CoAP"}),(0,r.jsx)(n.td,{children:"Constrained Application Protocol -- UDP based internet application protocol for constrained devices."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Data Lakehouse"}),(0,r.jsx)(n.td,{children:"Database architecture that combines data lake and data warehouse benefits, by introducing table metadata to files in object storage."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ECDSA Certificate"}),(0,r.jsx)(n.td,{children:"Elliptic Curve Digital Signature Algorithm"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Encryption"}),(0,r.jsx)(n.td,{children:"The process of converting plain, readable text to unreadable ciphertext to protect data."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"MQTT"}),(0,r.jsx)(n.td,{children:"Message Queuing Telemetry Transport -- common protocol used with IoT devices."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Security Posture"}),(0,r.jsx)(n.td,{children:"An organisation's strength and resilience in relation to predicting, preventing, and responding to cyber threats."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"TLS"}),(0,r.jsx)(n.td,{children:"Transport Layer Security"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"UDP"}),(0,r.jsx)(n.td,{children:"User Datagram Protocol"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"tls-solution",children:"TLS Solution"}),"\n",(0,r.jsx)(n.p,{children:"TLS is a cryptographic protocol that works by setting up a secure\r\nconnection through a process called the TLS Handshake. This is performed\r\nbetween a client and server and allows them to communicate in a secure\r\nway that ensures data is protected by encryption from eavesdropping,\r\nmanipulation, and other attacks by providing confidentiality,\r\nauthenticity, and integrity. During the TLS Handshake a client initiates\r\na request known as the 'Hello' message to a server and the server then\r\nresponds with it's 'Hello' message. Once this connection is established\r\nan authentication check is done to ensure that the server houses a valid\r\ndigital certificate including a private key. If there is no active valid\r\ncertificate installed, it has expired, or it has been revoked, the TLS\r\nHandshake will fail, and a connection will not be established. If an\r\nactive certificate is present, the client and server complete the TLS\r\nhandshake, the server's identity is authenticated, and an encrypted\r\nsession is established. The client and server can then communicate\r\nsecurely with all data encrypted by the session keys."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(85512).A+"",width:"722",height:"470"})}),"\n",(0,r.jsx)(n.p,{children:"Mutual TLS, or mTLS as it is known, uses the same technology as TLS but\r\ninstead of having a certificate installed only on the server side, it\r\nrequires a second certificate to be installed on the client side. The\r\nTLS process operates in the same way as above but allows for the\r\nidentity of the server and the client, such as IoT devices to be\r\nauthenticated. MTLS offers a much higher level of assurance and risk\r\nmitigation of data breach than regular TLS due to the additional\r\nauthentication but is a more complex solution to implement. It should be\r\nconsidered in future due to the data being transmitted and associated\r\nprivacy responsibilities, but this is currently out of scope for the\r\ninitial Proof of Concept and Implementation."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(77575).A+"",width:"724",height:"470"})}),"\n",(0,r.jsx)(n.h3,{id:"application-of-tls-solution",children:"Application of TLS Solution"}),"\n",(0,r.jsx)(n.p,{children:"TLS can be applied to a vast array of use cases, including, but not\r\nlimited to securing websites, securing IoT communication and\r\nconnections, email security, API security, VPN connection, FTP file\r\ntransfers, secure software update downloads, cloud services,\r\nauthentication via OIDC or similar and secure payments. Given the nature\r\nof the information being captured and communicated throughout the\r\nRedback Operations environment but internal and external, having\r\nencryption and authentication in place to protect that data is a\r\ncritical, proactive measure that can be taken to secure that data."}),"\n",(0,r.jsx)(n.p,{children:"While this implementation focuses on securing MQTT and CoAP\r\ncommunications there are likely many additional use cases that can be\r\nuncovered for the application of TLS in a very similar way, utilising\r\nthe Let's Encrypt and Certbot combination. This can be used for the\r\nmobile app that is being developed, for the company website, for any\r\nAPIs that are to be utilized, for the database server, as just a start.\r\nThis planning document serves as the framework and guidelines for any\r\nfuture application of TLS in the Redback Organisation."}),"\n",(0,r.jsx)(n.h2,{id:"current-state",children:"Current State"}),"\n",(0,r.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Redback Operations have implemented a messaging protocol allowing their\r\ndevices to feed data to a central database where it can be processed to\r\nprovide value to users in diverse ways. The currently utilized protocol\r\nis MQTT, which is a lightweight protocol that is scalable and reliable\r\nand a common way to connect IoT devices over the internet. There is a\r\ncurrent review assessing the viability of CoAP as an alternative\r\nprotocol allowing an even more lightweight solution improving speed of\r\nprocessing, though there is not a current implementation for this\r\nprotocol. Redback Operations Project 1 has plans to switch to CoAP later\r\nthis semester from the current MQTT communications."}),"\n",(0,r.jsx)(n.p,{children:"Currently MQTT is used throughout the organisation in several ways.\r\nProject 1 is using MQTT to communicate between a Raspberry Pi attached\r\nto their smart bike, their VR game and are working toward communicating\r\nwith their mobile app. They are using a HiveMQ broker but have access\r\nissues, and are looking into using data warehousing's VM's MQTT broker\r\nwhich relies on Mosquitto. Project 4 -- Orion previously undertook an\r\nassessment of various MQTT Servers, or Brokers, and identified the\r\nrecommended services to be provided by HiveMQ. This was followed by an\r\nImplementation Plan and subsequent implementation of HiveMQ as the\r\nbroker for Project 1. The focus for this team was deployment of a\r\nfunctional solution for the transmission of data collected by the\r\nRedback devices, and sent back to a central database, currently Mongo DB\r\nis utilized by some project teams, with a proposal to adopt Dremio as a\r\nData Lakehouse. Here is an overview of current Project 1 related\r\narchitecture:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(84106).A+"",width:"748",height:"424"})}),"\n",(0,r.jsx)(n.p,{children:"Overview of broader proposed architecture including additional provision\r\nof services such as web server, API and NTP server:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(36185).A+"",width:"738",height:"612"})}),"\n",(0,r.jsx)(n.p,{children:"It has been recognized that the data Redback Operations is handling\r\nrequires protection as it is sensitive and protected by the Privacy Act.\r\nRedback Operations is responsible for ensuring health, personal and\r\nbiometric data collected or transmitted by our devices is protected from\r\ndata leakage or breach."}),"\n",(0,r.jsx)(n.h3,{id:"current-architecture",children:"Current Architecture"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"MQTT Architecture"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(42756).A+"",width:"744",height:"536"})}),"\n",(0,r.jsx)(n.p,{children:"Central to an MQTT architecture is the MQTT Broker. There are several\r\nMQTT Brokers available for implementation, Redback Operations currently\r\nutilise two solutions, HiveMQ, and Mosquitto. The current HiveMQ broker\r\nis hosted as a serverless cloud service offering usage limited to 100\r\nfree connections, 10GB data traffic per month, MQTT versions 3.1, 3.1.1,\r\n5.0, WebSocket support, basic authorization rules and most relevant to\r\nthis report is the included MQTT over TLS/SSL offering. Some of risks\r\nassociated with this broker are that it includes basic authorization\r\nrules, but does not offer any opportunity to configure the broker as a\r\ndeveloper, and there is an elevated risk with this being a shared MQTT\r\nplatform. This may mean it carries a higher risk of unauthorized access\r\nor data breach. The limit of 100 connections presents an issue with\r\nscalability, particularly if this is utilized as a companywide service\r\nconnecting with all devices utilising MQTT. HiveMQ identify this service\r\nas being suitable only for basic MQTT learning and experimenting and the\r\napplication of this in Redback long term will likely not be suitable.\r\nFinally uptime may be an issue as there are no uptime SLAs for this\r\nsolution."}),"\n",(0,r.jsx)(n.p,{children:"The Moscquitto MQTT Broker is hosted within the on-premise\r\ninfrastructure for Redback Operations on a virtual machine that can be\r\naccessed via SSH. This service will offer greater configuration\r\nopportunity, greater control, and greater scalability. If managed well\r\nit may offer greater reliability than the free cloud based HiveMQ broker\r\nand it is possible for this broker to be deployed at scale as it\r\nsupports thousands of connections well, not millions though, which\r\nshould not be an issue for the scale of the Redback organisation.\r\nMosquitto offers the ability to integrate with Mongo DB which is\r\npotentially a critical requirement of the Redback Operations\r\nenvironment."}),"\n",(0,r.jsx)(n.p,{children:"All other components of the MQTT architecture, called clients, connect\r\nto the MQTT Broker and act as a publisher or subscriber. IoT Devices\r\nthat include sensors and other technologies used for gathering data\r\ntypically act as publishers, feeding data to the Broker to distribute to\r\nother clients in the network. These other clients subscribe to receive\r\ndata from the broker based on categorisation called topics. When\r\npublishers send their data to the Broker it is labelled with a topic,\r\nthat information is then distributed only to the devices that subscribe\r\nto the associated topic."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"CoAP Architecture (proposed only)"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(70631).A+"",width:"1008",height:"582"})}),"\n",(0,r.jsx)(n.p,{children:"CoAP is a protocol\r\nthat has many similarities to HTTP, which makes it easy to implement for\r\ndevelopers with an existing understanding of HTTP. Like HTTP, CoAP\r\noperates on a request-response communication model where a client sends\r\na CoAP request to a server and the server responds with the requested\r\ndata using GET, PUT, POST and DELETE methods. CoAP is suitable for both\r\ndevice-to-server communication and machine-to-machine communication, and\r\nit uses UDP which is a connectionless protocol rendering the solution\r\nlighter than MQTT. One compromise with CoAP is that it does not\r\nguarantee reliability by default, but requires a selection from\r\nconfirmable, non-confirmable and acknowledgement."}),"\n",(0,r.jsx)(n.h3,{id:"current-policies",children:"Current Policies"}),"\n",(0,r.jsx)(n.p,{children:"There are currently several policies in place that require review to\r\nassess whether the MQTT TLS solution should be included:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Cyber Security Guidelines: Project 1"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Cyber Security Guidelines: Project 3 -- Wearable Technologies for\r\nElderly People"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Cyber Security Guidelines: Project 7 -- Smart Bike Project"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Cryptography Policy"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Endpoint Security Policy"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"External Attack Surface Management Policy"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Server Security Policy"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"risks---mqtt",children:"Risks - MQTT"}),"\n",(0,r.jsx)(n.p,{children:"The number of known vulnerabilities with MQTT are growing year on year\r\nwith 23 known vulnerabilities in 2020, and 33 being recorded in 2021\r\nwith 18 of those being listed as critical vulnerabilities. Many of these\r\nare still not patched today. Some examples are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Use of insecure default configurations designed to prioritize ease\r\nof use over security."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"In Eclipse Mosquitto to version 2.0.5, establishing a connection to\r\nthe Mosquitto server without sending data triggers a process\r\nresulting in excessive CPU consumption. This could be used by a\r\nmalicious actor to perform a denial-of-service type attack."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Remote code execution attacks can be caused by buffer overflow\r\nvulnerabilities allowing bad actors to inject and execute malicious\r\ncode on IoT devices."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Aside from the above vulnerabilities with MQTT, which can mostly be\r\nmitigated by ensuring the most recent updates and patches are applied,\r\nthe key issue with the deployment of MQTT within the Redback\r\nOperations environment is that it is not currently secured using a TLS\r\nsolution. This is an optional feature of an MQTT configuration and\r\nwithout TLS applied all data is transmitted in plain text meaning it\r\nis vulnerable to data leak or data breach."}),"\n",(0,r.jsx)(n.h3,{id:"risks---coap",children:"Risks - CoAP"}),"\n",(0,r.jsx)(n.p,{children:"There are some good benefits of using CoAP -- it is a lightweight\r\nprotocol, often preferred for gathering telemetry data. Like devices\r\nusing MQTT, devices using CoAP are often reachable via public facing\r\nIP addresses accessible from the internet. This creates insecure end\r\npoints where data can leak, DDoS attacks can be carried out, and\r\naccess can be exploited."}),"\n",(0,r.jsx)(n.p,{children:"Unlike the MQTT protocol, CoAP incorporates DTLS, which is based on\r\nthe TLS protocol. The difference being DTLS uses UDP, which is the\r\ntransport layer CoAP uses. Like TLS, DTLS will provide encryption, but\r\nalso makes sure that the content cannot be altered by third parties\r\nalong the network path. DTLS requires a valid EDCSA certificate with a\r\npreference to have been issued by a trusted CA to avoid the issues and\r\nvulnerabilities that go along with self-signed certificates."}),"\n",(0,r.jsx)(n.h2,{id:"proposed-future-state",children:"Proposed Future State"}),"\n",(0,r.jsx)(n.h3,{id:"overview-1",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Both the MQTT and CoAP require a TLS x.509 certificate to ensure the\r\ndata being transmitted is encrypted and not delivered in plain text. The\r\nsolution proposed will enable TLS for the current MQTT related\r\narchitecture and outlines the application of TLS for a suggested\r\napplication of CoAP."}),"\n",(0,r.jsx)(n.h3,{id:"architecture---mqtt",children:"Architecture - MQTT"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(83942).A+"",width:"836",height:"596"})}),"\n",(0,r.jsx)(n.p,{children:"To implement a TLS solution for an MQTT architecture we need to install\r\na certificate on the MQTT Broker. We have reviewed the use of Let's\r\nEncrypt certificates and have identified them as being a feasible\r\nsolution in conjunction with Certbot to manage the renewal of those\r\ncertificates every 90 days. It is possible to implement mTLS by adding\r\ncertificates to the clients as well as the server, but this is optional.\r\nIt is also possible to use self-signed certificates to establish this\r\nconnection, but that requires the root certificate to be installed on\r\nall clients to establish and maintain trust. Once the certificates are\r\ninstalled, configuration must occur on both the client and broker side\r\nto facilitate the secured connection TLS offers."}),"\n",(0,r.jsx)(n.h3,{id:"mqtt-server-tls-implementation",children:"MQTT Server TLS Implementation"}),"\n",(0,r.jsx)(n.p,{children:"*Please refer to PoC Retrospective document for validated process"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Connect to the Redback Ops server containing the MQTT Broker\r\n(Mosquitto) via SSH."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Check Mosquitto is installed and running by entering the following\r\ncommand:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo systemctl status mosquitto\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Ensure Certbot is not already installed -- the expected return is\r\nnothing:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"which certbot\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install Certbot, commands are dependent on OS:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo apt update\r\n\r\nsudo apt install certbot\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Additional details can be found here: ",(0,r.jsx)(n.a,{href:"https://certbot.eff.org/instructions",children:"https://certbot.eff.org/instructions"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Ensure you have a domain associated with your server IP, for this\r\ninstructional we'll refer to it as mqttserver.domain.com"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Prove domain control and obtain a certificate:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo certbot certonly \\--standalone -d mqttserver.domain.com\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"You should now be able to locate the certificate files in\r\n/etc/letsencrypt/live/yourdomain.com/."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Locate files: fullchain.pem (cert file), and privkey.pem (private\r\nkey)"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Copy Mosquitto config file -- usually found at\r\n'/etc/mosquitto/mosquitto.conf' rename copy as\r\n'/etc/mosquitto/tlsconf.d/'."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Add the following code to enable TLS:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"listener 8883\r\ncafile /etc/letsencrypt/live/mqttserver.domain.com/chain.pem\r\ncertfile /etc/letsencrypt/live/mqttserver.domain.com/fullchain.pem\r\nkeyfile /etc/letsencrypt/live/mqttserver.domain.com/privkey.pem\r\ntls_version tlsv1.2\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"listener 8883 specifies the port for TLS connections (default is\r\n8883 for TLS)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"cafile points to the CA certificate file (part of the Let's Encrypt\r\nchain)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"certfile points to your server certificate."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"keyfile points to your private key."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"tls_version specifies the minimum TLS version to use."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{start:"11",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Restart Mosquitto to apply the config changes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo systemctl restart mosquitto\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Verify config by testing with MQTT Clients"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"mosquitto_sub -h mqttserver.domain.com -p 8883 -t test/topic \\--cafile\r\n/etc/letsencrypt/live/mqttserver.domain.com/chain.pem\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"*You may need to adjust the port -- please review"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"In the case a client fails to connect, check Mosquitto logs for\r\nerrors."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo journalctl -u mosquitto\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Once TLS secured connection is active, automate certificate renewal."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Check to see if Certbot has a cron job or systemd timer set up\r\ncorrectly:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo systemctl list-timers\n"})}),"\n",(0,r.jsx)(n.p,{children:'*You are looking for "certbot.timer".'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Reload Mosquitto config after successful renewal:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo nano /etc/letsencrypt/renewal-hooks/post/reload-mosquitto.sh\r\n#!/bin/bash\r\nsystemctl reload mosquitto\r\nsudo chmod +x /etc/letsencrypt/renewal-hooks/post/reload-mosquitto.sh\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"raspberry-pi-tls-implementation-for-mtls-option",children:"Raspberry Pi TLS Implementation for mTLS option"}),"\n",(0,r.jsx)(n.p,{children:"For reference if an mTLS solution is required in future. Below process\r\nwill need to be tested and validated."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Start by ensuring system is updated:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo apt update\r\nsudo apt upgrade\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install Certbot, this is the command for all OS except Apache:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo apt intall certbot\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Ensure you have a valid domain name pointing at your IP, and that\r\nport 80 and port 443 are not blocked. If you are using Cloudflare\r\nDNS services have the DNS set to bypass proxy servers. Ensure port\r\n80 is also forwarded."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Let's assume we are not running Apache, we now need to grab a Let's\r\nEncrypt cert using the built in standalone python server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo certbot certonly \\--standalone -d devicedomain.com -d www.devicedomain.com\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Enter required detail for Let's Encrypt as prompted. Certificate\r\nshould then be issued. If you experience issues double check\r\nsettings in question 3 and try again."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Certificates should now be stored at\r\n/etc/letsencrypt/live/devicedomain.com/"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Installing the certificate (this is a NGINX guide, you may need to\r\nredefine for other OS), start by opening NGINX config file:"}),"\n",(0,r.jsx)(n.p,{children:"/etc/nginx/ or /etc/nginx/sites-available/"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Open file in text editor and look for a block as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"server\r\n{\r\n    listen 80 default_server;\r\n    listen \\[::\\]:80 default_server;\r\n    root /usr/share/nginx/html;\r\n    index index.html index.htm;\r\n    server_name devicedomain.com;\r\n    location / \r\n    {\r\n        try_files \\$uri \\$uri/ =404;\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"In this code block, find:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"listen \\[::\\]:80 default_server\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Below this line we will need to add an additional command to\r\ninstruct NGINX to listen on port 443, which is the port that handles\r\nHTTPS/SSL traffic and web browser connections:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"listen 443 ssl;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Find:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"server_name example.com;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Below this add:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ssl_certificate /etc/letsencrypt/live/devicedomain.com/fullchain.pem;\r\nssl_certificate_key /etc/letsencrypt/live/devicedomain.com/privkey.pem;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"NGINX now knows how to locate the certificate files for the TLS\r\nHandshake, and decryption."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"architecture---coap",children:"Architecture - CoAP"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(52143).A+"",width:"1008",height:"556"})}),"\n",(0,r.jsx)(n.p,{children:"In the\r\ncase of CoAP we need to issue and install ECDSA certificates onto the\r\nCoAP server(s). As we are using DTLS, rather than TLS, we need to\r\nconvert the certificate files from .pem to PKCS12 format for them to be\r\nusable in this context. We then configure the CoAP server -- these are\r\nmost commonly Eclipe Californium or libcoap based -- and set up the\r\nKeyStore and TrustStore. As in the case of MQTT, if you choose to\r\nimplement mutual authentication, certificates can be installed on\r\nclients, but this is not essential."}),"\n",(0,r.jsx)(n.h3,{id:"coap-implementation",children:"CoAP Implementation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Set up CoAP server within the on-premises, or cloud environment, and\r\nensure it has an associated domain that we can prove control of."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Install Certbot -- this is dependent on which OS you are utilising,\r\ncommand line instructions can be found here:\r\n",(0,r.jsx)(n.a,{href:"https://certbot.eff.org/instructions",children:"https://certbot.eff.org/instructions"})," . An example of this is:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo apt-get update\r\nsudo apt-get install certbot\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Prove domain control (coapserver.domain.com) and obtain an ECDSA\r\ncertificate:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo certbot certonly --standalone --preferred-challenges http --key-type ecdsa -d coapserver.domain.com\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"You should now be able to locate the certificate files in\r\n/etc/letsencrypt/live/coapserver.domain.com/."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Locate files: fullchain.pem (cert file), and privkey.pem (private\r\nkey)"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Because we are using DTLS, not TLS we need to convert the .pem files\r\nto PKCS12 format"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'openssl pkcs12 -export -in /etc/letsencrypt/live/coapserver.domain.com/fullchain.pem -inkey /etc/letsencrypt/live/coapserver.domain.com/privkey.pem -out coap-server.p12 -name "coap-server"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"You may need to extract key and certificate from the P12 file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"openssl pkcs12 -in coap-server.p12 -nocerts -out coap-server.key -nodes\r\nopenssl pkcs12 -in coap-server.p12 -clcerts -nokeys -out coap-server.crt\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Next you will need to configure your CoAP server with DTLS -- the\r\ncommands will depend on your chosen CoAP implementation. A popular\r\noption is libcoap where you would perform the following commands:"}),"\n",(0,r.jsx)(n.p,{children:"Install libcoap:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo apt install libcoap2 libcoap-dev\n"})}),"\n",(0,r.jsx)(n.p,{children:"Configure DTLS on your CoAP server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"TBC - CoAP server must be identified\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Ensure CoAP server is running and configured with DTLS."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Test using CoAP Client library:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'coap-client -m get -u "your-username" -k "your-password" coaps://coapserver.domain.com/resource\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"risk-mitigation-and-best-practice",children:"Risk Mitigation and Best Practice"}),"\n",(0,r.jsx)(n.p,{children:"There are several actions we can take to mitigate risk and apply best\r\npractice. These include:"}),"\n",(0,r.jsx)(n.p,{children:"Enabling encryption of data transmitted using MQTT connections through\r\nTransport Layer Security (TLS) ensures confidentiality and integrity."}),"\n",(0,r.jsx)(n.p,{children:"Ensure you regularly check for and apply any updates and patches\r\nreleased by your MQTT software vendor. You may need to update your\r\nbroker, clients and libraries to ensure you are addressing\r\nvulnerabilities as they are discovered."}),"\n",(0,r.jsx)(n.p,{children:"Monitoring and intrusion detection practices are critical in both MQTT\r\nand CoAP environments to identify and respond to suspicious activity on\r\neither network."}),"\n",(0,r.jsx)(n.p,{children:"In a CoAP based environment ensure both DTLS and ECDSA are utilised. The\r\ncombination of the two will provide the best security and the best\r\nperformance."}),"\n",(0,r.jsx)(n.p,{children:"Key rotation is important in both MQTT and CoAP. The shorter the life of\r\nyour keys the more secure your environment is, as any vulnerability\r\nrelating directly to the key in use is mitigated by rotating to the new\r\nkey. It means there is only a limited time attackers have to 'break'\r\nyour cryptographic key and assume control of your data and systems. With\r\nLet's Encrypt, certificates have a maximum lifespan of 90 days, and they\r\nare rotated automatically with the use of Certbot."}),"\n",(0,r.jsx)(n.p,{children:"Key Storage is also very important and in the case of any key and secret\r\nstorage, these assets are best held within an HSM, whether it be\r\nhardware or software based."}),"\n",(0,r.jsx)(n.h3,{id:"feasibility-assessment",children:"Feasibility Assessment"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Technical Feasibility"})}),"\n",(0,r.jsx)(n.p,{children:"Certificate Issuance and Management"}),"\n",(0,r.jsx)(n.p,{children:"By using a combination of Let's Encrypt and Certbot certificates can be\r\nsuccessfully issued and installed in both the MQTT and CoAP use cases.\r\nCertbot ensures that certificates are rotated as required to provide\r\ncontinuity of valid certificates on the server or device we are\r\nprotecting."}),"\n",(0,r.jsx)(n.p,{children:"Certificate Details"}),"\n",(0,r.jsx)(n.p,{children:"The certificates issued by Let's Encrypt are in .pem format. This format\r\nis suitable for MQTT but not for CoAP. However, CoAP can utilise a .p12\r\ncertificate file which can be derived from converting a .pem file into\r\nthis format. CoAP also requires the use of an ECDSA based certificate\r\nwhich utilises an Eliptic Curve based algorithm for encryption. In this\r\nway we can cover both use cases successfully."}),"\n",(0,r.jsx)(n.p,{children:"MQTT Broker Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Redback Operations use both Mosquitto and HiveMQ Brokers, and both of\r\nthese options do support TLS."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Financial Feasibility"})}),"\n",(0,r.jsx)(n.p,{children:"The above solutions are all free of charge, so pose a feasible option\r\nfrom a financial perspective. The components are Certbot to handle\r\ncertificate automation, and Let's Encrypt to issue free digital\r\ncertificates. These tools are presented with a recommendation to utilize\r\na Mosquitto MQTT broker which is also free of charge."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Operational Feasibility"})}),"\n",(0,r.jsx)(n.p,{children:"The proposed solution is relatively simple to deploy and incorporate\r\ninto operational process as a standard across the organization. It can\r\nbe incorporated into the management and associated development of\r\nRedback Operations end points and does not add great complexity to\r\ncurrent processes. The benefit of standardizing the use of this TLS\r\nsolution for MQTT and CoAP is that it greatly reduces risk of data\r\ncompromise and improves the overall security posture of the\r\norganization. This is a lightweight solution that should not jeopardise\r\nperformance or scalability of Redback Operations product offering."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Security Feasibility"})}),"\n",(0,r.jsx)(n.p,{children:"The addition of TLS for MQTT and DTLS for CoAP will each add great\r\nsecurity benefit as it results in encrypted data hidden from attackers\r\nor eavesdroppers within the Redback environment. It also protects data\r\nfrom being tampered with. The other benefit for these solutions is\r\nauthentication. These security protocols allow a process of\r\nauthenticating a server to a client to ensure they are communicating\r\nwith the legitimate machine."}),"\n",(0,r.jsx)(n.h3,{id:"change-management",children:"Change Management"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Planning"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Define objectives and scope."}),"\n",(0,r.jsx)(n.li,{children:"Define current state."}),"\n",(0,r.jsx)(n.li,{children:"Define proposed future state."}),"\n",(0,r.jsx)(n.li,{children:"Assess current knowledge and skill level for this solution."}),"\n",(0,r.jsx)(n.li,{children:"Engage current stakeholders including developers of IoT and other\r\nappliance code, owners of end points including authority for current\r\nMQTT infrastructure, Project Team Leaders, Organisation Leaders."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Design and Configuration"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Design TLS for MQTT solution, configuration, and security policies."}),"\n",(0,r.jsx)(n.li,{children:"Design DTLS for CoAP solution, configuration, and security policies."}),"\n",(0,r.jsx)(n.li,{children:"Record all planning and design content within Business and\r\nImplementation Plan Document."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pilot Implementation"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Set up and configure TLS certificates and MQTT brokers and clients for\r\nsingle use case."}),"\n",(0,r.jsx)(n.li,{children:"Set up and configure DTLS certificates and CoAP brokers and clients for\r\nsingle use case if available."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Testing and Validation"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Validate and record step-by-step guide for use as an enablement tool."}),"\n",(0,r.jsx)(n.li,{children:"Perform functional, security, and performance testing."}),"\n",(0,r.jsx)(n.li,{children:"Optimize configurations as needed."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Org-wide Deployment"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure enablement materials are in place prior to broader deployment."}),"\n",(0,r.jsx)(n.li,{children:"Map additional use cases and applicable projects."}),"\n",(0,r.jsx)(n.li,{children:"Plan and execute deployment of solution to wider organisation."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Post-Deployment"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Monitor, maintain, and manage certificates."}),"\n",(0,r.jsx)(n.li,{children:"Update documentation and provide training."}),"\n",(0,r.jsx)(n.li,{children:"Review and implement improvements."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},70631:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TLS_CoAPArch-3315a1097107017000dc654a04defd5c.png"},52143:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TLS_CoAPArchwDTLS-f55dec65a048225fd47f0f5d25e19b8e.png"},42756:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TLS_MQTTArch-0844cc52789aea5a58811d116f435531.png"},83942:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TLS_MQTTArchwTLS-086202e23d1a0c3e36c88fc1cc8b1b6c.png"},84106:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TLS_P1Architecture-00a37ef8516206e6fe0787665ed4955a.png"},36185:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TLS_RedbackArchitecture-6026190a30aa130e7015ebf24341ba40.png"},85512:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TLS_TLShandshake-332d66d214e7e4177b102cd462b783de.png"},77575:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/TLS_mTLShandshake-f4c229b513eabae736f6dbf2639c44be.png"},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(96540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);