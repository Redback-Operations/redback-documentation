"use strict";(self.webpackChunkredback_documentation=self.webpackChunkredback_documentation||[]).push([[955],{63685:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"project-1/iot/codebase-documentation/MQTT-Client","title":"MQTT-Client","description":"Last updated by \'23/09/2024\'","source":"@site/docs/project-1/iot/codebase-documentation/MQTT-Client.md","sourceDirName":"project-1/iot/codebase-documentation","slug":"/project-1/iot/codebase-documentation/MQTT-Client","permalink":"/redback-documentation/docs/project-1/iot/codebase-documentation/MQTT-Client","draft":false,"unlisted":false,"editUrl":"https://github.com/Redback-Operations/redback-documentation/blob/main/docs/project-1/iot/codebase-documentation/MQTT-Client.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Environment-Variables","permalink":"/redback-documentation/docs/project-1/iot/codebase-documentation/Environment-Variables"},"next":{"title":"MQTT-Topics","permalink":"/redback-documentation/docs/project-1/iot/codebase-documentation/MQTT-Topics"}}');var r=t(74848),i=t(28453);const o={sidebar_position:3},d="MQTT Client",c={},l=[{value:"Paho-MQTT",id:"paho-mqtt",level:2},{value:"Installation",id:"installation",level:3},{value:"Library Documentation &amp; Source Code",id:"library-documentation--source-code",level:3},{value:"MQTTClient",id:"mqttclient",level:2},{value:"Import &amp; Create Client",id:"import--create-client",level:3},{value:"Subscribing to Topic",id:"subscribing-to-topic",level:3},{value:"Publish to Topic",id:"publish-to-topic",level:3},{value:"on_message",id:"on_message",level:3},{value:"loop_forever &amp; loop_start",id:"loop_forever--loop_start",level:3},{value:"Further Information",id:"further-information",level:2}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Last updated by:"})," KasparByrne, ",(0,r.jsx)(n.strong,{children:"Last updated on:"})," '23/09/2024'"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Last updated by:"})," KasparByrne, ",(0,r.jsx)(n.strong,{children:"Last updated on:"})," '23/09/2024'"]}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mqtt-client",children:"MQTT Client"})}),"\n",(0,r.jsx)(n.p,{children:"The Smartbike uses MQTT for external communication - between itself and applications."}),"\n",(0,r.jsx)(n.h2,{id:"paho-mqtt",children:"Paho-MQTT"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"paho-mqtt"})," library, based on the ",(0,r.jsx)(n.a,{href:"https://eclipse.dev/paho/index.php?page=clients/python/index.php",children:"Eclipse Mosquitto"})," MQTT broker, is used for MQTT functionality."]}),"\n",(0,r.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"To install the library run the follow command"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"pip install paho-mqtt"})}),"\n",(0,r.jsx)(n.h3,{id:"library-documentation--source-code",children:"Library Documentation & Source Code"}),"\n",(0,r.jsxs)(n.p,{children:["To find out more about ",(0,r.jsx)(n.code,{children:"paho-mqtt"})," view the ",(0,r.jsx)(n.a,{href:"https://eclipse.dev/paho/files/paho.mqtt.python/html/index.html",children:"documentation"})," or ",(0,r.jsx)(n.a,{href:"https://github.com/eclipse/paho.mqtt.python",children:"source code"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"mqttclient",children:"MQTTClient"}),"\n",(0,r.jsxs)(n.p,{children:["To simplify and standardise using MQTT, a paho based client-class (",(0,r.jsx)(n.code,{children:"MQTTClient"}),") has been implemented in ",(0,r.jsx)(n.code,{children:"Drivers/lib/mqtt_client.py"})," and should be used in all drivers and programs using MQTT."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:"from lib.mqtt_client import *\r\n\r\n...\r\n\r\n# define credentials and broker details\r\nbroker_address = 'example_address'\r\nusername = 'ExampleUsername'\r\npassword = 'Ex@mpLeP@Ssw0rd'\r\nport = 1883\r\n\r\n# Create & setup client\r\nclient = MQTTClient(broker_address, username, password, port)\r\nclient.setup_mqtt_client()\r\n\r\n# Subscribe to topics\r\nclient.subscribe('example/1')\r\n\r\n...\r\n\r\n# Publish on some event\r\ndef my_event():\r\n    payload = json.dumps( { ... } )\r\n    client.publish('example/2', payload)\r\n\r\n...\r\n\r\n# start the client\r\nclient.loop_start()\r\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"import--create-client",children:"Import & Create Client"}),"\n",(0,r.jsxs)(n.p,{children:["Import the client-class from ",(0,r.jsx)(n.code,{children:"Drivers/lib/"}),", create a client-object, and setup the connection to the broker using:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:"from lib.mqtt_client import *\r\n\r\n...\r\nbroker_address = 'example_address'\r\nusername = 'ExampleUsername'\r\npassword = 'Ex@mpLeP@Ssw0rd'\r\nport = 1883\r\n\r\nclient = MQTTClient(broker_address, username, password, port)\r\nclient.setup_mqtt_client()\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"MQTTClient(broker_address: str, username: str, password: str, port: int=1883)"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Parameter"})}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.em,{children:"example"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"broker_address"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"string"})}),(0,r.jsx)(n.td,{children:"MQTT broker host address"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"mqtt.example.address"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"username"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"string"})}),(0,r.jsx)(n.td,{children:"Configured account username"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"ExampleUsername"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"password"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"string"})}),(0,r.jsx)(n.td,{children:"Configured account password"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"Ex@mpLeP@Ssw0rd"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"port"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"integer"})}),(0,r.jsxs)(n.td,{children:["Port of the MQTT broker [default ",(0,r.jsx)(n.code,{children:"1883"}),"]"]}),(0,r.jsx)(n.td,{children:(0,r.jsxs)(n.em,{children:[(0,r.jsx)(n.code,{children:"1883"}),", ",(0,r.jsx)(n.code,{children:"8883"}),", ..."]})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"subscribing-to-topic",children:"Subscribing to Topic"}),"\n",(0,r.jsxs)(n.p,{children:["Subscribing to a topic in MQTT will have your client receive all messages published to that topic. When a message is received it will trigger the ",(0,r.jsx)(n.code,{children:"client.on_message()"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:"client.subscribe('example/1')\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"client.subscribe(topic_name: str)"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Paramater"})}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.em,{children:"example"})})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"topic_name"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"string"})}),(0,r.jsx)(n.td,{children:"Topic to subscribe to"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"bike/000001/speed/report"})})]})})]}),"\n",(0,r.jsx)(n.h3,{id:"publish-to-topic",children:"Publish to Topic"}),"\n",(0,r.jsxs)(n.p,{children:["Publishing to a topic in MQTT will send the ",(0,r.jsx)(n.code,{children:"payload"})," to all clients subscribed to that topic."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:"payload = json.dumps( { ... } )\r\nclient.publish('example/2', payload)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"publish(topic_name: str, payload: any)"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Paramater"})}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.em,{children:"example"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"topic_name"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"string"})}),(0,r.jsx)(n.td,{children:"Topic to publish to"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"bike/000001/incline/control"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"payload"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.em,{children:"any"})}),(0,r.jsxs)(n.td,{children:["Message to send - ",(0,r.jsx)(n.em,{children:"it does not need to be a JSON but it is good practice."})]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"{ 'incline' : 19, 'ts' : 1722834170.603658 }"}),", ",(0,r.jsx)(n.code,{children:"'Hello World!'"}),", ",(0,r.jsx)(n.code,{children:"[True, False]"}),", ",(0,r.jsx)(n.code,{children:"-10"}),", ",(0,r.jsx)(n.em,{children:"etc."})]})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"on_message",children:"on_message"}),"\n",(0,r.jsxs)(n.p,{children:["To do something when a message is received by a subscribed topic, the client-class needs to be sub-classed to extend its ",(0,r.jsx)(n.code,{children:"client.on_message()"})," method."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:"class MyChildClient(MQTTClient):\r\n    def __init__(self, broker_address, username, password, device):\r\n        super().__init__(broker_address, username, password)\r\n        self.device = device\r\n\r\n    def on_message(self, client, userdata, msg):\r\n        super().on_message(client,userdata, msg)\r\n        self.device.on_message(msg)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The topic-of-origin (",(0,r.jsx)(n.code,{children:"msg.topic"}),") of the message should be checked if subscribing to more than one topic. The message then needs to be decoded and converted into its expected data structure."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:"class Device:\r\n\r\n    ...\r\n\r\n    def on_message(self, msg):\r\n\r\n        # check msg topic of origin\r\n        if self.device_topic != msg.topic: return\r\n\r\n        # decode the payload\r\n        decoded_payload = str(msg.payload, 'utf-8')\r\n\r\n        # convert to expected data structure\r\n        dict_payload = json.loads(decoded_payload)\r\n\r\n        # use payload values\r\n        ...\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"client.on_message(client, userdata, msg)"})}),"\n",(0,r.jsxs)(n.p,{children:["Refer to ",(0,r.jsx)(n.code,{children:"paho-mqtt"})," ",(0,r.jsx)(n.a,{href:"https://eclipse.dev/paho/files/paho.mqtt.python/html/index.html",children:"documentation"})," for more information."]}),"\n",(0,r.jsx)(n.h3,{id:"loop_forever--loop_start",children:"loop_forever & loop_start"}),"\n",(0,r.jsx)(n.p,{children:"Before being able to publish and receive messages the client loop must first be started using one or two methods:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:"client.start_loop()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Will start the client loop in a separate thread allowing continued procedure of execution."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-Python",children:"client.loop_forever()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Will start the client loop in a blocking function preventing further execution of code."}),"\n",(0,r.jsx)(n.p,{children:"These loops will attempt to reconnect if the connection is lost but will also timeout if unable to reconnect."}),"\n",(0,r.jsx)(n.h2,{id:"further-information",children:"Further Information"}),"\n",(0,r.jsxs)(n.p,{children:["For more information on ",(0,r.jsx)(n.code,{children:"paho-mqtt"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["See the ",(0,r.jsx)(n.a,{href:"https://eclipse.dev/paho/files/paho.mqtt.python/html/index.html",children:"documentation"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["See the ",(0,r.jsx)(n.a,{href:"https://github.com/eclipse/paho.mqtt.python",children:"source code"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For our MQTT client-class & topics:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/Redback-Operations/redback-smartbike-iot/blob/main/Drivers/lib/mqtt_client.py",children:"Client-class code"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/redback-documentation/docs/project-1/iot/codebase-documentation/MQTT-Topics",children:"Topics"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var s=t(96540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);