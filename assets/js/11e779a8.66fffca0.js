"use strict";(self.webpackChunkredback_documentation=self.webpackChunkredback_documentation||[]).push([[4322],{25396:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"data-warehousing/MongoDb Connection/mongodbconnection","title":"mongodbconnection","description":"Last updated by \'09/05/2025\'","source":"@site/docs/data-warehousing/MongoDb Connection/mongodbconnection.md","sourceDirName":"data-warehousing/MongoDb Connection","slug":"/data-warehousing/MongoDb Connection/mongodbconnection","permalink":"/redback-documentation/docs/data-warehousing/MongoDb Connection/mongodbconnection","draft":false,"unlisted":false,"editUrl":"https://github.com/Redback-Operations/redback-documentation/blob/main/docs/data-warehousing/MongoDb Connection/mongodbconnection.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"MongoDB Connection Server"},"sidebar":"tutorialSidebar","previous":{"title":"MongoDB","permalink":"/redback-documentation/docs/category/mongodb"},"next":{"title":"MinIO","permalink":"/redback-documentation/docs/category/minio"}}');var i=o(74848),t=o(28453);const d={sidebar_position:1,sidebar_label:"MongoDB Connection Server"},r="MongoDB Connection Server",c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup",id:"setup",level:2},{value:"1. Clone the Repository",id:"1-clone-the-repository",level:3},{value:"2. Create .env at your root directory",id:"2-create-env-at-your-root-directory",level:3},{value:"3. Run Docker Compose to build the images and run the services:",id:"3-run-docker-compose-to-build-the-images-and-run-the-services",level:3},{value:"4. View the Application",id:"4-view-the-application",level:3},{value:"Configuring MongoDB and Monitoring Logs",id:"configuring-mongodb-and-monitoring-logs",level:2},{value:"Changing MongoDB Documents and Collections as needed",id:"changing-mongodb-documents-and-collections-as-needed",level:3},{value:"Check logs application",id:"check-logs-application",level:3},{value:"API Endpoints",id:"api-endpoints",level:2},{value:"1. Get All Documents",id:"1-get-all-documents",level:3},{value:"2. Get Document by ID",id:"2-get-document-by-id",level:3},{value:"3. Insert Document",id:"3-insert-document",level:3},{value:"4. Update Document",id:"4-update-document",level:3},{value:"5. Delete Document",id:"5-delete-document",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Last updated by:"})," RichardWhellum, ",(0,i.jsx)(n.strong,{children:"Last updated on:"})," '09/05/2025'"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Last updated by:"})," RichardWhellum, ",(0,i.jsx)(n.strong,{children:"Last updated on:"})," '09/05/2025'"]}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mongodb-connection-server",children:"MongoDB Connection Server"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Document Creation:"})," 15 August 2024. ",(0,i.jsx)(n.strong,{children:"Last Edited:"})," 20 September 2024. ",(0,i.jsx)(n.strong,{children:"Author:"})," Ben Dang.\r\n",(0,i.jsx)("br",{})," ",(0,i.jsx)(n.strong,{children:"Document Code:"})," MDB1. ",(0,i.jsx)(n.strong,{children:"Effective Date:"})," 15 August 2024. ",(0,i.jsx)(n.strong,{children:"Expiry Date:"})," 15 August 2025."]})}),"\n",(0,i.jsx)(n.p,{children:"This project is a web server application that connects to a MongoDB database. The setup uses Docker Compose to manage the services."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Docker"}),"\n",(0,i.jsx)(n.li,{children:"Docker Compose"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(n.h3,{id:"1-clone-the-repository",children:"1. Clone the Repository"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'git clone https://github.com/Redback-Operations/redback-data-warehouse.git\r\n\r\ncd "MongoDB Connection/Project1"\r\n\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-create-env-at-your-root-directory",children:"2. Create .env at your root directory"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['MONGO_URI="mongodb://your_username',":your_password","@your_host",":your_port",'/?authSource=your_authSource"']}),"\n",(0,i.jsx)(n.li,{children:'DB_NAME="your_database_name"'}),"\n",(0,i.jsx)(n.li,{children:'COLLECTION_NAME="your_collection_name"'}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-run-docker-compose-to-build-the-images-and-run-the-services",children:"3. Run Docker Compose to build the images and run the services:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"- docker-compose up --build\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-view-the-application",children:"4. View the Application"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Open your browser and navigate to ",(0,i.jsx)(n.a,{href:"http://localhost:5003/",children:"http://localhost:5003/"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"configuring-mongodb-and-monitoring-logs",children:"Configuring MongoDB and Monitoring Logs"}),"\n",(0,i.jsx)(n.h3,{id:"changing-mongodb-documents-and-collections-as-needed",children:"Changing MongoDB Documents and Collections as needed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"config.py contains the MongoDB connection string."}),"\n",(0,i.jsx)(n.li,{children:"document_model.py contains the MongoDB collection name."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"check-logs-application",children:"Check logs application"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"All the logs are stored in the logs folder at the root of the project.(app.log)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,i.jsx)(n.h3,{id:"1-get-all-documents",children:"1. Get All Documents"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Endpoint"}),": ",(0,i.jsx)(n.code,{children:"/documents"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"GET"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Retrieves all documents from the database."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"200 OK"}),": Returns a JSON array of documents."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-get-document-by-id",children:"2. Get Document by ID"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Endpoint"}),": ",(0,i.jsx)(n.code,{children:"/documents/<document_id>"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"GET"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Retrieves a document by its ID."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"document_id"})," (path): The ID of the document to retrieve."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"200 OK"}),": Returns the document as a JSON object."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"404 Not Found"}),": If the document is not found."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-insert-document",children:"3. Insert Document"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Endpoint"}),": ",(0,i.jsx)(n.code,{children:"/documents"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"POST"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Inserts a new document into the database."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Request Body"}),": JSON object representing the document to insert."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"201 Created"}),": Returns a success message and the ID of the inserted document."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-update-document",children:"4. Update Document"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Endpoint"}),": ",(0,i.jsx)(n.code,{children:"/documents/<document_id>"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"PUT"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Updates an existing document by its ID."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"document_id"})," (path): The ID of the document to update."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Request Body"}),": JSON object representing the updated document data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"200 OK"}),": Returns a success message if the document was updated."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"404 Not Found"}),": If the document is not found or no changes were made."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"5-delete-document",children:"5. Delete Document"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Endpoint"}),": ",(0,i.jsx)(n.code,{children:"/documents/<document_id>"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Method"}),": ",(0,i.jsx)(n.code,{children:"DELETE"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Description"}),": Deletes a document by its ID."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"document_id"})," (path): The ID of the document to delete."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Response"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"200 OK"}),": Returns a success message if the document was deleted."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"404 Not Found"}),": If the document is not found."]}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>r});var s=o(96540);const i={},t=s.createContext(i);function d(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);