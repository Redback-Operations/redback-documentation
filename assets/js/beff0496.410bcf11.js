"use strict";(self.webpackChunkredback_documentation=self.webpackChunkredback_documentation||[]).push([[482],{14502:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"project-1/iot/codebase-documentation/drivers/Button-Control","title":"Button-Control","description":"Last updated by \'25/09/2024\'","source":"@site/docs/project-1/iot/codebase-documentation/drivers/Button-Control.md","sourceDirName":"project-1/iot/codebase-documentation/drivers","slug":"/project-1/iot/codebase-documentation/drivers/Button-Control","permalink":"/redback-documentation/docs/project-1/iot/codebase-documentation/drivers/Button-Control","draft":false,"unlisted":false,"editUrl":"https://github.com/Redback-Operations/redback-documentation/blob/main/docs/project-1/iot/codebase-documentation/drivers/Button-Control.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Drivers","permalink":"/redback-documentation/docs/category/drivers"},"next":{"title":"Kickr-climb-&-smart-trainer","permalink":"/redback-documentation/docs/project-1/iot/codebase-documentation/drivers/Kickr-climb-&-smart-trainer"}}');var r=n(74848),s=n(28453);const i={sidebar_position:1},d="Button Control",c={},a=[{value:"Button class",id:"button-class",level:2},{value:"MQTT Topics",id:"mqtt-topics",level:2},{value:"MQTT Payload",id:"mqtt-payload",level:2},{value:"Driver Location",id:"driver-location",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Last updated by:"})," KasparByrne, ",(0,r.jsx)(t.strong,{children:"Last updated on:"})," '25/09/2024'"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Last updated by:"})," KasparByrne, ",(0,r.jsx)(t.strong,{children:"Last updated on:"})," '25/09/2024'"]}),"\n",(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"button-control",children:"Button Control"})}),"\n",(0,r.jsx)(t.admonition,{title:"Important!",type:"danger",children:(0,r.jsxs)(t.p,{children:["The HiveMQ broker has a limit on how often it can be published to. As a result, button publishes can be denied if they are too quick or obstructured by other publishing traffic. The alternative driver for temporary demonstration purposes ",(0,r.jsx)(t.code,{children:"DEMO_button_control.py"})," is less susceptible to this but it is not a solution."]})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"button_control"})," driver drives buttons added to the Smartbike and attached to the Raspberry Pi's GPIO pins."]}),"\n",(0,r.jsx)(t.h2,{id:"button-class",children:"Button class"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"Button"})," class can be used to quickly create new buttons which will read input from a passed pin and publish when the pin is pressed or released. The class functions based on events from the GPIO board."]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameter"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"pin"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"int"})}),(0,r.jsxs)(t.td,{children:["The ",(0,r.jsx)(t.code,{children:"GPIO"})," pin the button is connected to"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"name"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"str"})}),(0,r.jsx)(t.td,{children:"An identifying name used in logging and to identify in the publishing payload"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"client"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"MQTTClient"})}),(0,r.jsx)(t.td,{children:"the standardised MQTT client"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"mqtt-topics",children:"MQTT Topics"}),"\n",(0,r.jsx)(t.p,{children:"The default MQTT topic used in this driver is:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"bike/{DEVICE_ID}/button/report"})}),"\n",(0,r.jsx)(t.p,{children:"All button presses and releases will be published to this topic."}),"\n",(0,r.jsx)(t.h2,{id:"mqtt-payload",children:"MQTT Payload"}),"\n",(0,r.jsxs)(t.p,{children:["The published payload on each press and release uses this a ",(0,r.jsx)(t.code,{children:"JSON"})," structure:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"{\r\n    'button' : [button name]\r\n    'state' : [1 for pressed] | [0 for released]\r\n    'timestamp' : [time of publish]\r\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"driver-location",children:"Driver Location"}),"\n",(0,r.jsxs)(t.p,{children:["To see the ",(0,r.jsx)(t.code,{children:"button_control"})," driver code:"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/Redback-Operations/redback-smartbike-iot/blob/main/Drivers/button_control/button_control.py",children:"Drivers/button_control/button_control.py"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var o=n(96540);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);